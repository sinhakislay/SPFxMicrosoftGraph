{
  "title": "Package Solution Task Configuration",
  "description": "Defines parameters for task which creates the SharePoint Package",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "paths": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "packageDir": {
          "title": "Base Package Directory",
          "description": "The packaging root folder. Defaults to './sharepoint'",
          "type": "string"
        },
        "debugDir": {
          "title": "Debug Directory",
          "description": "The folder to write the raw package to disk for debugging. Defaults to 'solution/debug'",
          "type": "string"
        },
        "zippedPackage": {
          "title": "Zipped Package Name",
          "description": "The name of the sppkg to create (including extension) Defaults to 'ClientSolution.sppkg'",
          "type": "string"
        },
        "featureXmlDir": {
          "title": "Feature XML Directory",
          "description": "The folder containing the raw feature_xml to import into the package. Defaults to 'feature_xml'",
          "type": "string"
        },
        "manifestsMatch": {
          "title": "Manifests Match Pattern",
          "description": "The glob to match against to find manifest files. Looks in dist/ when running in normal, but deploy/ for production",
          "type": "string"
        },
        "distributionDir": {
          "title": "Distribution Directory",
          "description": "The path to the folder where manifests and client-side build resources are stored. Defaults to buildConfig.distFolder",
          "type": "string"
        }
      }
    },
    "solution": {
      "type": "object",
      "required": [
        "name",
        "id"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "description": "Non localized name to identify the package"
        },
        "id": {
          "title": "Name",
          "type": "string",
          "description": "A GUID identifier for this particular package"
        },
        "title": {
          "title": "Title",
          "description": "Localizable string for the title of the package. Can either be a non-localized string, or `$Resources:<stringId>;` if localized resources are provided for the package through a .resx file",
          "type": "string"
        },
        "supportedLocales": {
          "title": "Supported Locales",
          "description": "The list of cultures which this package can be used with. Follows LL-CC for each locale.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "title": "Version",
          "description": "Version of the package, may not match with the version of the components.",
          "type": "string",
          "pattern": "^[0-9]*.[0-9]*.[0-9]*.[0-9]*$"
        },
        "iconPath": {
          "title": "Icon Path",
          "description": "Relative path to the icon file. Base path is the base package directory.",
          "type": "string"
        },
        "skipFeatureDeployment": {
          "title": "Skip Feature Deployment",
          "description": "If true, allow the tenant admin the choice of being able to deploy the components to all sites immediately without running any feature deployment or adding apps in sites.",
          "type": "boolean"
        },
        "includeClientSideAssets": {
          "title": "Deploy client-side assets to SharePoint",
          "description": "If true, all client-side resources will be automatically included in the package and will be deployed to your SharePoint tenancy.",
          "type": "boolean"
        },
        "features": {
          "type": "array",
          "description": "If omitted, a feature will be created to contain the components.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "title",
              "description",
              "id"
            ],
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "description": {
                "title": "Description",
                "type": "string"
              },
              "id": {
                "title": "ID",
                "description": "A GUID identifier for this Feature",
                "type": "string"
              },
              "version": {
                "title": "The version of this Feature",
                "type": "string"
              },
              "componentIds": {
                "title": "The GUIDs of components which should be included in this feature. If omitted, all components will be included in this feature.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "assets": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "elementFiles": {
                    "title": "A list of element filenames.",
                    "description": "Any supported files that accompany the element manifest will be an element file. For example, the list instance schema is an element manifest that is associated with a list instance that is defined in an element manifest.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "elementManifests": {
                    "title": "A list of element manifest filenames.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "upgradeActions": {
                    "title": "A list of upgrade action filenames.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "webApiPermissionRequests": {
          "title": "Web Api Permission Requests",
          "type": "array",
          "description": "Create a list of required WebApiPermissionRequests neccesary for the solution.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "resource",
              "scope"
            ],
            "properties": {
              "resource": {
                "title": "Resource",
                "description": "Specifies the name of the resource service principal to which access has been granted.",
                "type": "string"
              },
              "scope": {
                "title": "Scope",
                "description": "Specifies the name of the scope claim that the resource application should expect in the OAuth 2.0 access token.",
                "type": "string"
              }
            }
          }
        },
        "isDomainIsolated": {
          "title": "Domain Isolation",
          "description": "If true, web parts in the package are rendered in a different domain for isolation",
          "type": "boolean"
        },
        "developer": {
          "title": "Developer Properties",
          "type": "object",
          "required": [
            "name",
            "websiteUrl",
            "privacyUrl",
            "termsOfUseUrl",
            "mpnId"
          ],
          "properties": {
            "name": {
              "title": "developer name",
              "type": "string"
            },
            "websiteUrl": {
              "title": "developer website url",
              "type": "string"
            },
            "privacyUrl": {
              "title": "developer privacy url",
              "type": "string"
            },
            "termsOfUseUrl": {
              "title": "terms of use url",
              "type": "string"
            },
            "mpnId": {
              "title": "microsoft partner network id",
              "type": "string"
            }
          }
        }
      }
    }
  }
}