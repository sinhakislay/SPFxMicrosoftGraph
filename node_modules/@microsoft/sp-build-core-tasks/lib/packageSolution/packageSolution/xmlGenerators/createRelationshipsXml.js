"use strict";
/**
 * @file createComponentXml.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Creates XML definitions for the relationships files
 */
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const XmlGenerator = require("xml");
const constants_1 = require("../config/constants");
const serializationOptions_1 = require("./serializationOptions");
let relationshipId = 0;
function relationshipToXmlDefinition(rel) {
    if (rel.target[0] !== '/') {
        rel.target = '/' + rel.target;
    }
    return {
        Relationship: [
            {
                _attr: {
                    Type: `http://schemas.microsoft.com/sharepoint/2012/app/relationships/${rel.type}`,
                    Target: rel.target,
                    Id: `r${relationshipId++}`
                }
            }
        ]
    };
}
function createRelationshipsXml(currentFilename, rels) {
    const file = path.basename(currentFilename);
    const folder = path.dirname(currentFilename);
    return {
        filename: path.posix.join(folder, constants_1.default.RelsFolder, file + constants_1.default.RelsXml),
        contents: Buffer.from(XmlGenerator({
            Relationships: [
                {
                    _attr: {
                        xmlns: 'http://schemas.openxmlformats.org/package/2006/relationships'
                    }
                }
            ].concat(rels.map((rel) => relationshipToXmlDefinition(rel)))
        }, serializationOptions_1.default))
    };
}
exports.default = createRelationshipsXml;
//# sourceMappingURL=createRelationshipsXml.js.map