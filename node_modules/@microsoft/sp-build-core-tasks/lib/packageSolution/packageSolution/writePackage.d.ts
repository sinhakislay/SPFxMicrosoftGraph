/**
 * @file writePackage.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Writes a package xml object to disk, in both raw and zipped format
 */
/// <reference path="../../../src/packageSolution/packageSolution/node-zip.d.ts" />
import IFile from './models/packageXml/IFile';
import IOpenDocumentConventionXml from './models/packageXml/IOpenDocumentConventionXml';
import IPackageXml from './models/packageXml/IPackageXml';
import IFeatureXml from './models/packageXml/IFeatureXml';
import IIcon from './models/packageXml/IIcon';
import { IPackageSolutionTaskConfig } from '../PackageSolutionTask';
/**
 * Writes the ISolutionXml object containing the solution package xml to the disk using provided config
 */
export default function writePackage(solution: IPackageXml, config: IPackageSolutionTaskConfig): Promise<any>;
/**
 * Ensures that the contents of config.paths.debugDir have been deleted
 */
export declare function cleanRawPackageDirectory(config: IPackageSolutionTaskConfig): Promise<void>;
export declare function writeFeature(feature: IFeatureXml, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<any>;
/**
 * Write the app icon related files: The icon file itself, and the config.xml
 * If there is no icon it does nothing.
 * If the icon path is invalid, it throws an error.
 */
export declare function writeIcon(icon: IIcon, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<any>;
export declare function writeXmlFile(file: IFile, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<void>;
export declare function writeODCFile(file: IOpenDocumentConventionXml, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<any>;
//# sourceMappingURL=writePackage.d.ts.map