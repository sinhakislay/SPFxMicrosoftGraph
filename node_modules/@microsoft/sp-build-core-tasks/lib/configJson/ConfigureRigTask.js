"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const fsx = require("fs-extra");
const OdspGulpTask_1 = require("./../OdspGulpTask");
const index_1 = require("./index");
const UPGRADE_PARAM_NAME = 'upgrade';
class ConfigureRigTask extends OdspGulpTask_1.default {
    constructor() {
        super('configure-sp-build-rig');
    }
    executeTask(gulp, completeCallback) {
        try {
            const configResult = index_1.readConfigFile(this.logVerbose.bind(this));
            if (configResult.missingFile) {
                this.logWarning('Missing config.json file. If this is a non-web project, consider using a non-web build rig ' +
                    'like @microsoft/sp-build-node');
            }
            if (configResult.readError) {
                completeCallback(`Error reading config.json file: ${configResult.readError}`);
                return;
            }
            if (!configResult.isLatestVersion) {
                if (this.buildConfig.args[UPGRADE_PARAM_NAME]) {
                    try {
                        index_1.migrateToLatestVersion(this.logWarning.bind(this), configResult.configData);
                    }
                    catch (e) {
                        completeCallback(e.message);
                        return;
                    }
                    fsx.writeFileSync(index_1.defaultConfigPath, JSON.stringify(configResult.configData, undefined, 2));
                }
                else {
                    this.logWarning(`This project is using an old config.json file version (${configResult.version}). Run the ` +
                        `build again with the --${UPGRADE_PARAM_NAME} (gulp --${UPGRADE_PARAM_NAME}) flag to ` +
                        'upgrade the config.json file to the latest version.');
                }
            }
            lodash_1.merge(this.properties, configResult.configData);
            completeCallback();
        }
        catch (e) {
            completeCallback(e);
        }
    }
}
exports.ConfigureRigTask = ConfigureRigTask;
//# sourceMappingURL=ConfigureRigTask.js.map