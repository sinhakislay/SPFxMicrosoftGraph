"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const node_core_library_1 = require("@microsoft/node-core-library");
const gulp_core_build_1 = require("@microsoft/gulp-core-build");
const deployToAzure_1 = require("./uploadCDN/deployToAzure");
class DeployAzureStorageTask extends gulp_core_build_1.GulpTask {
    constructor() {
        super('deploy-azure-storage', {
            uploadPath: '**/*.*'
        });
    }
    loadSchema() {
        return node_core_library_1.JsonFile.load(path.join(__dirname, 'deploy-azure-storage.schema.json'));
    }
    executeTask(gulp, completeCallback) {
        if (!this.taskConfig.workingDir) {
            this.taskConfig.workingDir = this.buildConfig.distFolder;
        }
        return deployToAzure_1.default(this.taskConfig, this.log.bind(this), this.logError.bind(this)).then(completeCallback, (error) => {
            this.logError(error.message);
            if (error.stack) {
                this.logError(error.stack);
            }
        });
    }
}
exports.DeployAzureStorageTask = DeployAzureStorageTask;
//# sourceMappingURL=DeployAzureStorageTask.js.map