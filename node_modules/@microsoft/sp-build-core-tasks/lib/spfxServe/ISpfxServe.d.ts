import { ISpfxServeTaskConfig } from './SpfxServeTask';
export interface ISpfxServe extends ISpfxServeTaskConfig {
    '$schema': string;
}
export interface ISpfxServeSessionConfiguration {
    /**
     * The fully-qualified URL of the page to launch
     */
    pageUrl: string;
    /**
     * An optional list of custom actions to provide as query parameters to the page. The key of this
     *  object must be the ID of the custom action component.
     */
    customActions?: {
        [id: string]: ICustomActionConfiguration;
    };
    /**
     * An optional list of field customizers to provide as query parameters to the page. The key of this
     *  object must be the field ID the customizer applies to.
     */
    fieldCustomizers?: {
        [fieldName: string]: IFieldCustomizerConfiguration;
    };
}
export interface ICustomActionConfiguration {
    /**
     * The type of custom action, use "ClientSideExtension.ApplicationCustomizer" for the Application Customizer
     *  extension.
     */
    location: 'ClientSideExtension.ApplicationCustomizer' | 'ClientSideExtension.ListViewCommandSet.ContextMenu' | 'ClientSideExtension.ListViewCommandSet.CommandBar' | 'ClientSideExtension.ListViewCommandSet' | 'ClientSideExtension.SearchQueryModifier';
    properties?: any;
}
export interface IFieldCustomizerConfiguration {
    /**
     * The ID of the field customizer component.
     */
    id: string;
    properties?: any;
}
//# sourceMappingURL=ISpfxServe.d.ts.map