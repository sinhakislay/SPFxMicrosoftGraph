import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
/**
 * Class to load async chunks.
 *
 * @internal
 */
export default class LegacyThirdPartyFabricCoreLoader {
    /**
     * Indicates whether the fabric-core styles are loaded on the page or not.
     */
    private static isLoaded;
    /**
     * Method to dynamically load the legacy third-party fabric core styles.
     * This method should be called only when a third-party component(web part or extension)
     * is being loaded on to the page.
     *
     * NOTE: Remove this method when the below killswitch is graduated from \@microsoft/sp-webpart-base.
     * 'isStopLoadingLegacyFabricCSSKillSwitchActivated' - '57b771ed-2b57-41c2-aaaa-0e21c587c6dc'
     *
     * @param isComponentInternal - indicates whether the requesting component is internal to Microsoft or not.
     */
    static load(isComponentInternal: boolean | undefined): Promise<void>;
    /**
     * Method to dynamically force load the legacy third-party fabric core styles.
     * All the below conditions are checked and needs to be true to force load the legacy css:
     *   1. Should be third party component (web part or extension)
     *   2. Should not be already loaded
     *   3. Component should ask to load the legacy css or if the component is built version \< 1.8
     *
     * @param manifest - component's manifest
     */
    static forceLoad(manifest: IClientSideComponentManifest): Promise<void>;
    /**
     * Method to check if the web part need to load the legacy css.
     * @param manifest - component's manifest
     */
    static needLegacyFabricCss(manifest: IClientSideComponentManifest): boolean;
    private static _shouldLoad;
}
//# sourceMappingURL=LegacyThirdPartyFabricCoreLoader.d.ts.map