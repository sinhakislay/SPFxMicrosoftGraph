{"version":3,"file":"install-run-rush.js","sourceRoot":"","sources":["../../src/scripts/install-run-rush.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,0EAA0E;;AAE1E,8GAA8G;AAC9G,EAAE;AACF,0GAA0G;AAC1G,uHAAuH;AACvH,gHAAgH;AAChH,6BAA6B;AAC7B,EAAE;AACF,qDAAqD;AACrD,EAAE;AACF,gFAAgF;AAEhF,6BAA6B;AAC7B,yBAAyB;AAEzB,+CAKuB;AAEvB,MAAM,YAAY,GAAW,iBAAiB,CAAC;AAC/C,MAAM,oBAAoB,GAAW,sBAAsB,CAAC;AAE5D,SAAS,eAAe;IACtB,MAAM,kBAAkB,GAAuB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACjF,IAAI,kBAAkB,KAAK,SAAS,EAAE;QACpC,OAAO,CAAC,GAAG,CAAC,gDAAgD,oBAAoB,IAAI,kBAAkB,EAAE,CAAC,CAAC;QAC1G,OAAO,kBAAkB,CAAC;KAC3B;IAED,MAAM,cAAc,GAAW,gCAAkB,EAAE,CAAC;IACpD,MAAM,YAAY,GAAW,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gCAAkB,CAAC,CAAC;IAC3E,IAAI;QACF,MAAM,gBAAgB,GAAW,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACxE,mGAAmG;QACnG,yGAAyG;QACzG,MAAM,eAAe,GAAa,gBAAgB,CAAC,KAAK,CAAC,+CAA+C,CAAE,CAAC;QAC3G,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;KAC3B;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CACb,oEAAoE,cAAc,KAAK;YACvF,iFAAiF;YACjF,6BAA6B,CAC9B,CAAC;KACH;AACH,CAAC;AAED,SAAS,IAAI;IACX,MAAM,CACJ,QAAQ,EAAE,mBAAmB,CAC7B,UAAU,EAAE,8CAA8C,CAC1D,GAAG,cAAc,CAAC,8BAA8B,CACjD,GAAa,OAAO,CAAC,IAAI,CAAC;IAE3B,4GAA4G;IAC5G,oDAAoD;IACpD,MAAM,UAAU,GAAW,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrD,MAAM,GAAG,GAAW,UAAU,CAAC,WAAW,EAAE,KAAK,sBAAsB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3F,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;KACpF;IAED,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,UAAU,sBAAsB,CAAC,CAAC;QACxD,IAAI,UAAU,KAAK,qBAAqB,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,YAAY,UAAU,uBAAuB,CAAC,CAAC;SAC5D;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,YAAY,UAAU,iBAAiB,CAAC,CAAC;SACtD;QACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IAED,uCAAyB,CAAC,GAAG,EAAE;QAC7B,MAAM,OAAO,GAAW,eAAe,EAAE,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,qDAAqD,OAAO,EAAE,CAAC,CAAC;QAE5E,OAAO,2BAAa,CAAC,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACL,CAAC;AAED,IAAI,EAAE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See the @microsoft/rush package's LICENSE file for license information.\r\n\r\n// THIS FILE WAS GENERATED BY A TOOL. ANY MANUAL MODIFICATIONS WILL GET OVERWRITTEN WHENEVER RUSH IS UPGRADED.\r\n//\r\n// This script is intended for usage in an automated build environment where the Rush command may not have\r\n// been preinstalled, or may have an unpredictable version.  This script will automatically install the version of Rush\r\n// specified in the rush.json configuration file (if not already installed), and then pass a command-line to it.\r\n// An example usage would be:\r\n//\r\n//    node common/scripts/install-run-rush.js install\r\n//\r\n// For more information, see: https://rushjs.io/pages/maintainer/setup_new_repo/\r\n\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nimport {\r\n  installAndRun,\r\n  findRushJsonFolder,\r\n  RUSH_JSON_FILENAME,\r\n  runWithErrorAndStatusCode\r\n} from './install-run';\r\n\r\nconst PACKAGE_NAME: string = '@microsoft/rush';\r\nconst RUSH_PREVIEW_VERSION: string = 'RUSH_PREVIEW_VERSION';\r\n\r\nfunction _getRushVersion(): string {\r\n  const rushPreviewVersion: string | undefined = process.env[RUSH_PREVIEW_VERSION];\r\n  if (rushPreviewVersion !== undefined) {\r\n    console.log(`Using Rush version from environment variable ${RUSH_PREVIEW_VERSION}=${rushPreviewVersion}`);\r\n    return rushPreviewVersion;\r\n  }\r\n\r\n  const rushJsonFolder: string = findRushJsonFolder();\r\n  const rushJsonPath: string = path.join(rushJsonFolder, RUSH_JSON_FILENAME);\r\n  try {\r\n    const rushJsonContents: string = fs.readFileSync(rushJsonPath, 'utf-8');\r\n    // Use a regular expression to parse out the rushVersion value because rush.json supports comments,\r\n    // but JSON.parse does not and we don't want to pull in more dependencies than we need to in this script.\r\n    const rushJsonMatches: string[] = rushJsonContents.match(/\\\"rushVersion\\\"\\s*\\:\\s*\\\"([0-9a-zA-Z.+\\-]+)\\\"/)!;\r\n    return rushJsonMatches[1];\r\n  } catch (e) {\r\n    throw new Error(\r\n      `Unable to determine the required version of Rush from rush.json (${rushJsonFolder}). ` +\r\n      'The \\'rushVersion\\' field is either not assigned in rush.json or was specified ' +\r\n      'using an unexpected syntax.'\r\n    );\r\n  }\r\n}\r\n\r\nfunction _run(): void {\r\n  const [\r\n    nodePath, /* Ex: /bin/node */\r\n    scriptPath, /* /repo/common/scripts/install-run-rush.js */\r\n    ...packageBinArgs /* [build, --to, myproject] */\r\n  ]: string[] = process.argv;\r\n\r\n  // Detect if this script was directly invoked, or if the install-run-rushx script was invokved to select the\r\n  // appropriate binary inside the rush package to run\r\n  const scriptName: string = path.basename(scriptPath);\r\n  const bin: string = scriptName.toLowerCase() === 'install-run-rushx.js' ? 'rushx' : 'rush';\r\n  if (!nodePath || !scriptPath) {\r\n    throw new Error('Unexpected exception: could not detect node path or script path');\r\n  }\r\n\r\n  if (process.argv.length < 3) {\r\n    console.log(`Usage: ${scriptName} <command> [args...]`);\r\n    if (scriptName === 'install-run-rush.js') {\r\n      console.log(`Example: ${scriptName} build --to myproject`);\r\n    } else {\r\n      console.log(`Example: ${scriptName} custom-command`);\r\n    }\r\n    process.exit(1);\r\n  }\r\n\r\n  runWithErrorAndStatusCode(() => {\r\n    const version: string = _getRushVersion();\r\n    console.log(`The rush.json configuration requests Rush version ${version}`);\r\n\r\n    return installAndRun(PACKAGE_NAME, version, bin, packageBinArgs);\r\n  });\r\n}\r\n\r\n_run();\r\n"]}