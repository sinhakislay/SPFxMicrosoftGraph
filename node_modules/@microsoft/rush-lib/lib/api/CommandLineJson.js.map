{"version":3,"file":"CommandLineJson.js","sourceRoot":"","sources":["../../src/api/CommandLineJson.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * \"baseCommand\" from command-line.schema.json\r\n */\r\nexport interface IBaseCommandJson {\r\n  commandKind: 'bulk' | 'global';\r\n  name: string;\r\n  summary: string;\r\n  /**\r\n   * If omitted, the summary will be used instead.\r\n   */\r\n  description?: string;\r\n  safeForSimultaneousRushProcesses: boolean;\r\n}\r\n\r\n/**\r\n * \"bulkCommand\" from command-line.schema.json\r\n */\r\nexport interface IBulkCommandJson extends IBaseCommandJson {\r\n  commandKind: 'bulk';\r\n  enableParallelism: boolean;\r\n  ignoreDependencyOrder?: boolean;\r\n  ignoreMissingScript?: boolean;\r\n  incremental?: boolean;\r\n  allowWarningsInSuccessfulBuild?: boolean;\r\n}\r\n\r\n/**\r\n * \"globalCommand\" from command-line.schema.json\r\n */\r\nexport interface IGlobalCommandJson extends IBaseCommandJson {\r\n  commandKind: 'global';\r\n  shellCommand: string;\r\n}\r\n\r\nexport type CommandJson = IBulkCommandJson | IGlobalCommandJson;\r\n\r\n/**\r\n * \"baseParameter\" from command-line.schema.json\r\n */\r\nexport interface IBaseParameterJson {\r\n  parameterKind: 'flag' | 'choice' | 'string';\r\n  longName: string;\r\n  shortName?: string;\r\n  description: string;\r\n  associatedCommands: string[];\r\n}\r\n\r\n/**\r\n * \"flagParameter\" from command-line.schema.json\r\n */\r\nexport interface IFlagParameterJson extends IBaseParameterJson {\r\n  parameterKind: 'flag';\r\n}\r\n\r\n/**\r\n * Part of \"choiceParameter\" from command-line.schema.json\r\n */\r\nexport interface IChoiceParameterAlternativeJson {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * \"choiceParameter\" from command-line.schema.json\r\n */\r\nexport interface IChoiceParameterJson extends IBaseParameterJson {\r\n  parameterKind: 'choice';\r\n  alternatives: IChoiceParameterAlternativeJson[];\r\n  defaultValue?: string;\r\n}\r\n\r\nexport interface IStringParameterJson extends IBaseParameterJson {\r\n  parameterKind: 'string';\r\n  argumentName: string;\r\n}\r\n\r\nexport type ParameterJson = IFlagParameterJson | IChoiceParameterJson | IStringParameterJson;\r\n\r\n/**\r\n * Interfaces for the file format described by command-line.schema.json\r\n */\r\nexport interface ICommandLineJson {\r\n  commands?: CommandJson[];\r\n  parameters?: ParameterJson[];\r\n}\r\n"]}