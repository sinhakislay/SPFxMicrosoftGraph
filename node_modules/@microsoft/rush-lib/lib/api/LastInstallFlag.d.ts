export declare const LAST_INSTALL_FLAG_FILE_NAME: string;
/**
 * A helper class for managing last-install flags, which are persistent and
 * indicate that something installed in the folder was sucessfully completed.
 * It also compares state, so that if something like the Node.js version has changed,
 * it can invalidate the last install.
 * @internal
 */
export declare class LastInstallFlag {
    private _path;
    private _state;
    /**
     * Creates a new LastInstall flag
     * @param folderPath - the folder that this flag is managing
     * @param state - optional, the state that should be managed or compared
    */
    constructor(folderPath: string, state?: Object);
    /**
     * Returns true if the file exists and the contents match the current state
     */
    isValid(): boolean;
    /**
     * Writes the flag file to disk with the current state
     */
    create(): void;
    /**
     * Removes the flag file
     */
    clear(): void;
    /**
     * Returns the full path to the flag file
     */
    readonly path: string;
}
//# sourceMappingURL=LastInstallFlag.d.ts.map