{"version":3,"file":"ExperimentsConfiguration.js","sourceRoot":"","sources":["../../src/api/ExperimentsConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAC7B,oEAIsC;AAetC;;;;GAIG;AACH,MAAa,wBAAwB;IAQnC;;OAEG;IACH,YAAmB,YAAoB;QACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QAEnC,IAAI,CAAC,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC1C,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,wBAAwB,GAAG,4BAAQ,CAAC,eAAe,CACtD,IAAI,CAAC,aAAa,EAClB,wBAAwB,CAAC,WAAW,CACrC,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACH,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC;;AA7Bc,oCAAW,GAAe,8BAAU,CAAC,QAAQ,CAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC,CACpE,CAAC;AAHJ,4DA+BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport {\r\n  JsonFile,\r\n  JsonSchema,\r\n  FileSystem\r\n} from '@microsoft/node-core-library';\r\n\r\n/**\r\n * This interface represents the raw experiments.json file which allows repo\r\n * maintainers to enable and disable experimental Rush features.\r\n * @beta\r\n */\r\nexport interface IExperimentsJson {\r\n  /**\r\n   * If this setting is enabled, incremental builds should use repo-wide dependency tracking\r\n   * instead of project-specific tracking.\r\n   */\r\n  legacyIncrementalBuildDependencyDetection?: boolean;\r\n}\r\n\r\n/**\r\n * Use this class to load the \"common/config/rush/experiments.json\" config file.\r\n * This file allows repo maintainers to enable and disable experimental Rush features.\r\n * @beta\r\n */\r\nexport class ExperimentsConfiguration {\r\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\r\n    path.resolve(__dirname, '..', 'schemas', 'experiments.schema.json')\r\n  );\r\n\r\n  private _experimentConfiguration: IExperimentsJson;\r\n  private _jsonFileName: string;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  public constructor(jsonFileName: string) {\r\n    this._jsonFileName = jsonFileName;\r\n    this._experimentConfiguration = {};\r\n\r\n    if (!FileSystem.exists(this._jsonFileName)) {\r\n      this._experimentConfiguration = {};\r\n    } else {\r\n      this._experimentConfiguration = JsonFile.loadAndValidate(\r\n        this._jsonFileName,\r\n        ExperimentsConfiguration._jsonSchema\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the experiments configuration.\r\n   */\r\n  public get configuration(): Readonly<IExperimentsJson> {\r\n    return this._experimentConfiguration;\r\n  }\r\n}\r\n"]}