{"version":3,"file":"ListAction.js","sourceRoot":"","sources":["../../../src/cli/actions/ListAction.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseRushAction } from './BaseRushAction';\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { CommandLineFlagParameter } from '@microsoft/ts-command-line';\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport * as Table from 'cli-table';\r\n\r\nexport class ListAction extends BaseRushAction {\r\n  private _version: CommandLineFlagParameter;\r\n  private _path: CommandLineFlagParameter;\r\n  private _fullPath: CommandLineFlagParameter;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: 'list',\r\n      summary: 'List package information for all projects in the repo',\r\n      documentation:\r\n        'List package names, and optionally version (--version) and ' +\r\n        'path (--path) or full path (--full-path), for projects in the ' +\r\n        'current rush config.',\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._version = this.defineFlagParameter({\r\n      parameterLongName: '--version',\r\n      parameterShortName: '-v',\r\n      description: 'If this flag is specified, the project version will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._path = this.defineFlagParameter({\r\n      parameterLongName: '--path',\r\n      parameterShortName: '-p',\r\n      description: 'If this flag is specified, the project path will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._fullPath = this.defineFlagParameter({\r\n      parameterLongName: '--full-path',\r\n      parameterShortName: '-f',\r\n      description: 'If this flag is specified, the project full path will ' +\r\n        'be displayed in a column along with the package name.'\r\n    });\r\n  }\r\n\r\n  protected run(): Promise<void> {\r\n    return Promise.resolve().then(() => {\r\n      const allPackages: Map<string, RushConfigurationProject> = this.rushConfiguration.projectsByName;\r\n      if (this._version.value || this._path.value || this._fullPath.value) {\r\n        this._printListTable(allPackages);\r\n      } else {\r\n        this._printList(allPackages);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _printList(allPackages: Map<string, RushConfigurationProject>): void {\r\n    allPackages.forEach((_config: RushConfigurationProject, name: string) => {\r\n      console.log(name);\r\n    });\r\n  }\r\n\r\n  private _printListTable(allPackages: Map<string, RushConfigurationProject>): void {\r\n    const tableHeader: string[] = ['Project'];\r\n    if (this._version.value) {\r\n      tableHeader.push('Version');\r\n    }\r\n    if (this._path.value) {\r\n      tableHeader.push('Path');\r\n    }\r\n    if (this._fullPath.value) {\r\n      tableHeader.push('Full Path');\r\n    }\r\n    const table: Table = new Table({\r\n      head: tableHeader\r\n    });\r\n\r\n    allPackages.forEach((config: RushConfigurationProject, name: string) => {\r\n      const packageRow: string[] = [name];\r\n      if (this._version.value) {\r\n        packageRow.push(config.packageJson.version);\r\n      }\r\n      if (this._path.value) {\r\n        packageRow.push(config.projectRelativeFolder);\r\n      }\r\n      if (this._fullPath.value) {\r\n        packageRow.push(config.projectFolder);\r\n      }\r\n      table.push(packageRow);\r\n    });\r\n    console.log(table.toString());\r\n  }\r\n}\r\n"]}