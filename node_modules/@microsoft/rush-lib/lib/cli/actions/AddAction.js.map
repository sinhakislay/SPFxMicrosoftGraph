{"version":3,"file":"AddAction.js","sourceRoot":"","sources":["../../../src/cli/actions/AddAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as os from 'os';\r\nimport * as semver from 'semver';\r\n\r\nimport {\r\n  CommandLineFlagParameter,\r\n  CommandLineStringParameter\r\n} from '@microsoft/ts-command-line';\r\n\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { BaseRushAction } from './BaseRushAction';\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { PackageJsonUpdater, SemVerStyle } from '../../logic/PackageJsonUpdater';\r\nimport { PackageName } from '@microsoft/node-core-library';\r\n\r\nexport class AddAction extends BaseRushAction {\r\n  private _allFlag: CommandLineFlagParameter;\r\n  private _exactFlag: CommandLineFlagParameter;\r\n  private _caretFlag: CommandLineFlagParameter;\r\n  private _devDependencyFlag: CommandLineFlagParameter;\r\n  private _makeConsistentFlag: CommandLineFlagParameter;\r\n  private _skipUpdateFlag: CommandLineFlagParameter;\r\n  private _packageName: CommandLineStringParameter;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    const documentation: string[] = [\r\n      'Adds a specified package as a dependency of the current project (as determined by the current working directory)'\r\n      + ' and then runs \"rush update\". If no version is specified, a version will be automatically detected (typically'\r\n      + ' either the latest version or a version that won\\'t break the \"ensureConsistentVersions\" policy). If a version'\r\n      + ' range is specified, the latest version in the range will be used. The version will be automatically prepended'\r\n      + ' with a tilde, unless the \"--exact\" or \"--caret\" flags are used. The \"--make-consistent\" flag can be used to'\r\n      + ' update all packages with the dependency.'\r\n    ];\r\n    super({\r\n      actionName: 'add',\r\n      summary: 'Adds a dependency to the package.json and runs rush upgrade.',\r\n      documentation: documentation.join(os.EOL),\r\n      safeForSimultaneousRushProcesses: false,\r\n      parser\r\n    });\r\n  }\r\n\r\n  public onDefineParameters(): void {\r\n    this._packageName = this.defineStringParameter({\r\n      parameterLongName: '--package',\r\n      parameterShortName: '-p',\r\n      required: true,\r\n      argumentName: 'PACKAGE',\r\n      description: '(Required) The name of the package which should be added as a dependency.'\r\n        + ' A SemVer version specifier can be appended after an \"@\" sign.  WARNING: Symbol characters'\r\n        + ' are usually interpreted by your shell, so it\\'s recommended to use quotes.'\r\n        + ' For example, write \"rush add --package \"example@^1.2.3\"\" instead of \"rush add --package example@^1.2.3\".'\r\n    });\r\n    this._exactFlag = this.defineFlagParameter({\r\n      parameterLongName: '--exact',\r\n      description: 'If specified, the SemVer specifier added to the'\r\n        + ' package.json will be an exact version (e.g. without tilde or caret).'\r\n    });\r\n    this._caretFlag = this.defineFlagParameter({\r\n      parameterLongName: '--caret',\r\n      description: 'If specified, the SemVer specifier added to the'\r\n        + ' package.json will be a prepended with a \"caret\" specifier (\"^\").'\r\n    });\r\n    this._devDependencyFlag = this.defineFlagParameter({\r\n      parameterLongName: '--dev',\r\n      description: 'If specified, the package will be added to the \"devDependencies\" section of'\r\n        + ' the package.json'\r\n    });\r\n    this._makeConsistentFlag = this.defineFlagParameter({\r\n      parameterLongName: '--make-consistent',\r\n      parameterShortName: '-m',\r\n      description: 'If specified, other packages with this dependency will have their package.json'\r\n        + ' files updated to use the same version of the dependency.'\r\n    });\r\n    this._skipUpdateFlag = this.defineFlagParameter({\r\n      parameterLongName: '--skip-update',\r\n      parameterShortName: '-s',\r\n      description: 'If specified, the \"rush update\" command will not be run after updating the'\r\n        + ' package.json files.'\r\n    });\r\n    this._allFlag = this.defineFlagParameter({\r\n      parameterLongName: '--all',\r\n      description: 'If specified, the dependency will be added to all projects.'\r\n    });\r\n  }\r\n\r\n  public async run(): Promise<void> {\r\n    let projects: RushConfigurationProject[];\r\n    if (this._allFlag.value) {\r\n      projects = this.rushConfiguration.projects;\r\n    } else {\r\n      const currentProject: RushConfigurationProject | undefined = this.rushConfiguration.tryGetProjectForPath(\r\n        process.cwd()\r\n      );\r\n\r\n      if (!currentProject) {\r\n        throw new Error('The \"rush add\" command must be invoked under a project'\r\n          + ` folder that is registered in rush.json unless the ${this._allFlag.longName} is used.`);\r\n      }\r\n\r\n      projects = [currentProject];\r\n    }\r\n\r\n    if (this._caretFlag.value && this._exactFlag.value) {\r\n      throw new Error(\r\n        `Only one of \"${this._caretFlag.longName}\" and \"${this._exactFlag.longName}\" should be specified`\r\n      );\r\n    }\r\n\r\n    let version: string | undefined = undefined;\r\n    let packageName: string | undefined = this._packageName.value!;\r\n    const parts: Array<string> = packageName.split('@');\r\n\r\n    if (parts[0] === '') {\r\n      // this is a scoped package\r\n      packageName = '@' + parts[1];\r\n      version = parts[2];\r\n    } else {\r\n      packageName = parts[0];\r\n      version = parts[1];\r\n    }\r\n\r\n    if (!PackageName.isValidName(packageName)) {\r\n      throw new Error(`The package name \"${packageName}\" is not valid.`);\r\n    }\r\n\r\n    if (version && version !== 'latest' && !semver.validRange(version) && !semver.valid(version)) {\r\n      throw new Error(`The SemVer specifier \"${version}\" is not valid.`);\r\n    }\r\n\r\n    const updater: PackageJsonUpdater = new PackageJsonUpdater(this.rushConfiguration, this.rushGlobalFolder);\r\n\r\n    let rangeStyle: SemVerStyle;\r\n    if (version && version !== 'latest') {\r\n      if (this._exactFlag.value || this._caretFlag.value) {\r\n        throw new Error(\r\n          `The \"${this._caretFlag.longName}\" and \"${this._exactFlag.longName}\" flags may not be specified if a ` +\r\n          `version is provided in the ${this._packageName.longName} specifier. In this case \"${version}\" was provided.`\r\n        );\r\n      }\r\n\r\n      rangeStyle = SemVerStyle.Passthrough;\r\n    } else {\r\n      rangeStyle = this._caretFlag.value\r\n        ? SemVerStyle.Caret\r\n        : (this._exactFlag.value ? SemVerStyle.Exact : SemVerStyle.Tilde);\r\n    }\r\n\r\n    await updater.doRushAdd({\r\n      projects: projects,\r\n      packageName: packageName,\r\n      initialVersion: version,\r\n      devDependency: this._devDependencyFlag.value,\r\n      updateOtherPackages: this._makeConsistentFlag.value,\r\n      skipUpdate: this._skipUpdateFlag.value,\r\n      debugInstall: this.parser.isDebug,\r\n      rangeStyle: rangeStyle\r\n    });\r\n  }\r\n}\r\n"]}