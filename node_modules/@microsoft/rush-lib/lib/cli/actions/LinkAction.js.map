{"version":3,"file":"LinkAction.js","sourceRoot":"","sources":["../../../src/cli/actions/LinkAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAK3D,uEAAoE;AAEpE,qDAAkD;AAElD,MAAa,UAAW,SAAQ,+BAAc;IAG5C,YAAY,MAA6B;QACvC,KAAK,CAAC;YACJ,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,+CAA+C;YACxD,aAAa,EAAE,sFAAsF;kBAClG,qGAAqG;kBACrG,6FAA6F;kBAC7F,uCAAuC;YAC1C,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAES,kBAAkB;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACrC,iBAAiB,EAAE,SAAS;YAC5B,kBAAkB,EAAE,IAAI;YACxB,WAAW,EAAE,+FAA+F;gBAC1G,cAAc;SACjB,CAAC,CAAC;IACL,CAAC;IAES,GAAG;QACX,MAAM,WAAW,GAAoB,uCAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/F,OAAO,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;CACF;AA5BD,gCA4BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CommandLineFlagParameter } from '@microsoft/ts-command-line';\r\n\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { LinkManagerFactory } from '../../logic/LinkManagerFactory';\r\nimport { BaseLinkManager } from '../../logic/base/BaseLinkManager';\r\nimport { BaseRushAction } from './BaseRushAction';\r\n\r\nexport class LinkAction extends BaseRushAction {\r\n  private _force: CommandLineFlagParameter;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: 'link',\r\n      summary: 'Create node_modules symlinks for all projects',\r\n      documentation: 'Create node_modules symlinks for all projects.  This operation is normally performed'\r\n       + ' automatically as part of \"rush install\" or \"rush update\".  You should only need to use \"rush link\"'\r\n       + ' if you performed \"rush unlink\" for some reason, or if you specified the \"--no-link\" option'\r\n       + ' for \"rush install\" or \"rush update\".',\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._force = this.defineFlagParameter({\r\n      parameterLongName: '--force',\r\n      parameterShortName: '-f',\r\n      description: 'Deletes and recreates all links, even if the filesystem state seems to indicate that this is ' +\r\n        'unnecessary.'\r\n    });\r\n  }\r\n\r\n  protected run(): Promise<void> {\r\n    const linkManager: BaseLinkManager = LinkManagerFactory.getLinkManager(this.rushConfiguration);\r\n    return linkManager.createSymlinksForProjects(this._force.value);\r\n  }\r\n}\r\n"]}