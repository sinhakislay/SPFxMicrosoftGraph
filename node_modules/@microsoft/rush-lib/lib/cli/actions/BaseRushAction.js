"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const colors = require("colors");
const os = require("os");
const path = require("path");
const ts_command_line_1 = require("@microsoft/ts-command-line");
const node_core_library_1 = require("@microsoft/node-core-library");
const EventHooksManager_1 = require("../../logic/EventHooksManager");
const Utilities_1 = require("../../utilities/Utilities");
/**
 * The base class for a few specialized Rush command-line actions that
 * can be used without a rush.json configuration.
 */
class BaseConfiglessRushAction extends ts_command_line_1.CommandLineAction {
    get rushConfiguration() {
        return this._parser.rushConfiguration;
    }
    get rushGlobalFolder() {
        return this._parser.rushGlobalFolder;
    }
    get parser() {
        return this._parser;
    }
    constructor(options) {
        super(options);
        this._parser = options.parser;
        this._safeForSimultaneousRushProcesses = !!options.safeForSimultaneousRushProcesses;
    }
    onExecute() {
        this._ensureEnvironment();
        if (this.rushConfiguration) {
            if (!this._safeForSimultaneousRushProcesses) {
                if (!node_core_library_1.LockFile.tryAcquire(this.rushConfiguration.commonTempFolder, 'rush')) {
                    console.log(colors.red(`Another rush command is already running in this repository.`));
                    process.exit(1);
                }
            }
        }
        console.log(`Starting "rush ${this.actionName}"${os.EOL}`);
        return this.run();
    }
    _ensureEnvironment() {
        if (this.rushConfiguration) {
            /* tslint:disable-next-line:no-string-literal */
            let environmentPath = process.env['PATH'];
            environmentPath = path.join(this.rushConfiguration.commonTempFolder, 'node_modules', '.bin') +
                path.delimiter + environmentPath;
            /* tslint:disable-next-line:no-string-literal */
            process.env['PATH'] = environmentPath;
        }
    }
}
exports.BaseConfiglessRushAction = BaseConfiglessRushAction;
/**
 * The base class that most Rush command-line actions should extend.
 */
class BaseRushAction extends BaseConfiglessRushAction {
    get rushConfiguration() {
        return super.rushConfiguration;
    }
    onExecute() {
        if (!this.rushConfiguration) {
            throw Utilities_1.Utilities.getRushConfigNotFoundError();
        }
        return super.onExecute();
    }
    get eventHooksManager() {
        if (!this._eventHooksManager) {
            this._eventHooksManager = new EventHooksManager_1.EventHooksManager(this.rushConfiguration);
        }
        return this._eventHooksManager;
    }
}
exports.BaseRushAction = BaseRushAction;
//# sourceMappingURL=BaseRushAction.js.map