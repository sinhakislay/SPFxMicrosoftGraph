import { BaseScriptAction, IBaseScriptActionOptions } from './BaseScriptAction';
/**
 * Constructor parameters for BulkScriptAction.
 */
export interface IBulkScriptActionOptions extends IBaseScriptActionOptions {
    enableParallelism: boolean;
    ignoreMissingScript: boolean;
    ignoreDependencyOrder: boolean;
    incremental: boolean;
    allowWarningsInSuccessfulBuild: boolean;
    /**
     * Optional command to run. Otherwise, use the `actionName` as the command to run.
     */
    commandToRun?: string;
}
/**
 * This class implements bulk commands which are run individually for each project in the repo,
 * possibly in parallel.  The action executes a script found in the project's package.json file.
 *
 * @remarks
 * Bulk commands can be defined via common/config/command-line.json.  Rush's predefined "build"
 * and "rebuild" commands are also modeled as bulk commands, because they essentially just
 * execute scripts from package.json in the same as any custom command.
 */
export declare class BulkScriptAction extends BaseScriptAction {
    private _enableParallelism;
    private _ignoreMissingScript;
    private _isIncrementalBuildAllowed;
    private _commandToRun;
    private _changedProjectsOnly;
    private _fromFlag;
    private _toFlag;
    private _fromVersionPolicy;
    private _toVersionPolicy;
    private _verboseParameter;
    private _parallelismParameter;
    private _ignoreDependencyOrder;
    private _allowWarningsInSuccessfulBuild;
    constructor(options: IBulkScriptActionOptions);
    run(): Promise<void>;
    protected onDefineParameters(): void;
    private _mergeProjectsWithVersionPolicy;
    private _doBeforeTask;
    private _doAfterTask;
    private _collectTelemetry;
}
//# sourceMappingURL=BulkScriptAction.d.ts.map