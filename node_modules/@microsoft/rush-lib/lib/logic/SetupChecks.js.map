{"version":3,"file":"SetupChecks.js","sourceRoot":"","sources":["../../src/logic/SetupChecks.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as colors from 'colors';\r\nimport * as path from 'path';\r\nimport * as semver from 'semver';\r\nimport { RushConfiguration } from '../api/RushConfiguration';\r\nimport { AlreadyReportedError } from '../utilities/AlreadyReportedError';\r\nimport { Utilities } from '../utilities/Utilities';\r\nimport { RushConstants } from '../logic/RushConstants';\r\nimport { FileSystem } from '@microsoft/node-core-library';\r\n\r\n// Refuses to run at all if the PNPM version is older than this, because there\r\n// are known bugs or missing features in earlier releases.\r\nconst MINIMUM_SUPPORTED_NPM_VERSION: string = '4.5.0';\r\n\r\n// Refuses to run at all if the PNPM version is older than this, because there\r\n// are known bugs or missing features in earlier releases.\r\nconst MINIMUM_SUPPORTED_PNPM_VERSION: string = '2.6.2';\r\n\r\n/**\r\n * Validate that the developer's setup is good.\r\n *\r\n * These checks are invoked prior to the following commands:\r\n * - rush install\r\n * - rush update\r\n * - rush build\r\n * - rush rebuild\r\n */\r\nexport class SetupChecks {\r\n  public static validate(rushConfiguration: RushConfiguration): void {\r\n    // NOTE: The Node.js version is also checked in rush/src/start.ts\r\n    const errorMessage: string | undefined = SetupChecks._validate(rushConfiguration);\r\n\r\n    if (errorMessage) {\r\n      console.error(colors.red(Utilities.wrapWords(errorMessage)));\r\n      throw new AlreadyReportedError();\r\n    }\r\n  }\r\n\r\n  private static _validate(rushConfiguration: RushConfiguration): string | undefined {\r\n    // Check for outdated tools\r\n    if (rushConfiguration.packageManager === 'pnpm') {\r\n      if (semver.lt(rushConfiguration.packageManagerToolVersion, MINIMUM_SUPPORTED_PNPM_VERSION)) {\r\n        return `The rush.json file requests PNPM version `\r\n          + rushConfiguration.packageManagerToolVersion\r\n          + `, but PNPM ${MINIMUM_SUPPORTED_PNPM_VERSION} is the minimum supported by Rush.`;\r\n      }\r\n    } else if (rushConfiguration.packageManager === 'npm') {\r\n      if (semver.lt(rushConfiguration.packageManagerToolVersion, MINIMUM_SUPPORTED_NPM_VERSION)) {\r\n        return `The rush.json file requests NPM version `\r\n          + rushConfiguration.packageManagerToolVersion\r\n          + `, but NPM ${MINIMUM_SUPPORTED_NPM_VERSION} is the minimum supported by Rush.`;\r\n      }\r\n    }\r\n\r\n    SetupChecks._checkForPhantomFolders(rushConfiguration);\r\n  }\r\n\r\n  private static _checkForPhantomFolders(rushConfiguration: RushConfiguration): void {\r\n    const phantomFolders: string[] = [];\r\n    const seenFolders: Set<string> = new Set<string>();\r\n\r\n    // Check from the real parent of the common/temp folder\r\n    const commonTempParent: string = path.dirname(FileSystem.getRealPath(rushConfiguration.commonTempFolder));\r\n    SetupChecks._collectPhantomFoldersUpwards(commonTempParent, phantomFolders, seenFolders);\r\n\r\n    // Check from the real folder containing rush.json\r\n    const realRushJsonFolder: string = FileSystem.getRealPath(rushConfiguration.rushJsonFolder);\r\n    SetupChecks._collectPhantomFoldersUpwards(realRushJsonFolder, phantomFolders, seenFolders);\r\n\r\n    if (phantomFolders.length > 0) {\r\n      if (phantomFolders.length === 1) {\r\n        console.log(colors.yellow(Utilities.wrapWords(\r\n          'Warning: A phantom \"node_modules\" folder was found. This defeats Rush\\'s protection against'\r\n          + ' NPM phantom dependencies and may cause confusing build errors. It is recommended to'\r\n          + ' delete this folder:'\r\n        )));\r\n      } else {\r\n        console.log(colors.yellow(Utilities.wrapWords(\r\n          'Warning: Phantom \"node_modules\" folders were found. This defeats Rush\\'s protection against'\r\n          + ' NPM phantom dependencies and may cause confusing build errors. It is recommended to'\r\n          + ' delete these folders:'\r\n        )));\r\n      }\r\n      for (const folder of phantomFolders) {\r\n        console.log(colors.yellow(`\"${folder}\"`));\r\n      }\r\n      console.log(); // add a newline\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks \"folder\" and each of its parents to see if it contains a node_modules folder.\r\n   * The bad folders will be added to phantomFolders.\r\n   * The seenFolders set is used to avoid duplicates.\r\n   */\r\n  private static _collectPhantomFoldersUpwards(folder: string, phantomFolders: string[],\r\n    seenFolders: Set<string>): void {\r\n\r\n    // Stop if we reached a folder that we already analyzed\r\n    while (!seenFolders.has(folder)) {\r\n      seenFolders.add(folder);\r\n\r\n      // If there is a node_modules folder under this folder, add it to the list of bad folders\r\n      const nodeModulesFolder: string = path.join(folder, RushConstants.nodeModulesFolderName);\r\n      if (FileSystem.exists(nodeModulesFolder)) {\r\n        phantomFolders.push(nodeModulesFolder);\r\n      }\r\n\r\n      // Walk upwards\r\n      const parentFolder: string = path.dirname(folder);\r\n      if (!parentFolder || parentFolder === folder) {\r\n        // If path.dirname() returns its own input, then means we reached the root\r\n        break;\r\n      }\r\n\r\n      folder = parentFolder;\r\n    }\r\n  }\r\n}\r\n"]}