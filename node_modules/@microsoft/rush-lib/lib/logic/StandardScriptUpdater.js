"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const node_core_library_1 = require("@microsoft/node-core-library");
/**
 * Checks whether the common/scripts files are up to date, and recopies them if needed.
 * This is used by the "rush install" and "rush update" commands.
 */
class StandardScriptUpdater {
    /**
     * Recopy the scripts if the scripts are out of date.
     * Used by "rush update".
     */
    static update(rushConfiguration) {
        let anyChanges = false;
        for (const scriptName of StandardScriptUpdater._scriptNames) {
            if (StandardScriptUpdater._updateScriptOrThrow(scriptName, rushConfiguration, false)) {
                anyChanges = true;
            }
        }
        if (anyChanges) {
            console.log(); // print a newline after the notices
        }
        return anyChanges;
    }
    /**
     * Throw an exception if the scripts are out of date.
     * Used by "rush install".
     */
    static validate(rushConfiguration) {
        for (const scriptName of StandardScriptUpdater._scriptNames) {
            StandardScriptUpdater._updateScriptOrThrow(scriptName, rushConfiguration, true);
        }
    }
    /**
     * Compares a single script in the common/script folder to see if it needs to be updated.
     * If throwInsteadOfCopy=false, then an outdated or missing script will be recopied;
     * otherwise, an exception is thrown.
     */
    static _updateScriptOrThrow(scriptName, rushConfiguration, throwInsteadOfCopy) {
        const targetFilePath = path.join(rushConfiguration.commonScriptsFolder, scriptName);
        const sourceFilePath = path.resolve(__dirname, '../scripts', scriptName);
        node_core_library_1.FileSystem.ensureFolder(rushConfiguration.commonScriptsFolder);
        // Are the files the same?
        let filesAreSame = false;
        if (node_core_library_1.FileSystem.exists(targetFilePath)) {
            const sourceContent = node_core_library_1.FileSystem.readFile(sourceFilePath);
            const targetContent = node_core_library_1.FileSystem.readFile(targetFilePath);
            const sourceNormalized = StandardScriptUpdater._normalize(sourceContent);
            const targetNormalized = StandardScriptUpdater._normalize(targetContent);
            if (sourceNormalized === targetNormalized) {
                filesAreSame = true;
            }
        }
        if (!filesAreSame) {
            if (throwInsteadOfCopy) {
                throw new Error('The standard files in the "common/scripts" folders need to be updated'
                    + ' for this Rush version.  Please run "rush update" and commit the changes.');
            }
            else {
                console.log(`Script is out of date; updating "${targetFilePath}"`);
                node_core_library_1.FileSystem.copyFile({
                    sourcePath: sourceFilePath,
                    destinationPath: targetFilePath
                });
            }
        }
        return !filesAreSame;
    }
    static _normalize(content) {
        // Ignore newline differences from .gitattributes
        return node_core_library_1.Text.convertToLf(content)
            // Ignore trailing whitespace
            .split('\n').map(x => x.trimRight()).join('\n');
    }
}
StandardScriptUpdater._scriptNames = [
    'install-run.js',
    'install-run-rush.js',
    'install-run-rushx.js'
];
exports.StandardScriptUpdater = StandardScriptUpdater;
//# sourceMappingURL=StandardScriptUpdater.js.map