{"version":3,"file":"RushConstants.js","sourceRoot":"","sources":["../../src/logic/RushConstants.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D;;;;;;;;GAQG;AACH,IAAiB,aAAa,CAgJ7B;AAhJD,WAAiB,aAAa;IAC5B;;;;;;OAMG;IACU,6CAA+B,GAAW,gCAAgC,CAAC;IAExF;;OAEG;IACU,mCAAqB,GAAW,SAAS,CAAC;IAEvD;;;;;;OAMG;IACU,gDAAkC,GAAW,mCAAmC,CAAC;IAE9F;;OAEG;IACU,8BAAgB,GAAW,QAAQ,CAAC;IAEjD;;OAEG;IACU,8BAAgB,GAAW,YAAY,CAAC;IAErD;;;;OAIG;IACU,gCAAkB,GAAW,MAAM,CAAC;IAEjD;;;OAGG;IACU,wCAA0B,GAAW,UAAU,CAAC;IAE7D;;;;OAIG;IACU,oCAAsB,GAAW,UAAU,CAAC;IAEzD;;OAEG;IACU,mCAAqB,GAAW,qBAAqB,CAAC;IAEnE;;;OAGG;IACU,sCAAwB,GAAW,iBAAiB,CAAC;IAElE;;;OAGG;IACU,sCAAwB,GAAW,gBAAgB,CAAC;IAEjE;;OAEG;IACU,8BAAgB,GAAW,aAAa,CAAC;IAEtD;;OAEG;IACU,oCAAsB,GAAW,WAAW,CAAC;IAE1D;;OAEG;IACU,mCAAqB,GAAW,cAAc,CAAC;IAE5D;;;;;;OAMG;IACH,mFAAmF;IACnF,gFAAgF;IACnE,oCAAsB,GAAW,sBAAsB,CAAC;IAErE;;;;OAIG;IACU,oCAAsB,GAAW,sBAAsB,CAAC;IAErE;;;OAGG;IACU,mCAAqB,GAAW,OAAO,CAAC;IAErD;;;OAGG;IACU,iCAAmB,GAAW,mBAAmB,CAAC;IAElD,qCAAuB,GAAW,uBAAuB,CAAC;IAEvE;;OAEG;IACU,iCAAmB,GAAW,kBAAkB,CAAC;IAE9D;;OAEG;IACU,4BAAc,GAAW,mBAAmB,CAAC;IAE1D;;OAEG;IACU,6BAAe,GAAW,iBAAiB,CAAC;IAEzD;;;OAGG;IACU,oCAAsB,GAAW,eAAe,CAAC;IAE9D;;;OAGG;IACU,+CAAiC,GAAW,sBAAsB,CAAC;AAClF,CAAC,EAhJgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAgJ7B","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * Constants used by the Rush tool.\r\n *\r\n * @remarks\r\n *\r\n * These are NOT part of the public API surface for rush-lib.\r\n * The rationale is that we don't want people implementing custom parsers for\r\n * the Rush config files; instead, they should rely on the official APIs from rush-lib.\r\n */\r\nexport namespace RushConstants {\r\n  /**\r\n   * The filename (\"browser-approved-packages.json\") for an optional policy configuration file\r\n   * that stores a list of NPM packages that have been approved for usage by Rush projects.\r\n   * This is part of a pair of config files, one for projects that run in a web browser\r\n   * (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else\r\n   * (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).\r\n   */\r\n  export const browserApprovedPackagesFilename: string = 'browser-approved-packages.json';\r\n\r\n  /**\r\n   * The folder name (\"changes\") where change files will be stored.\r\n   */\r\n  export const changeFilesFolderName: string = 'changes';\r\n\r\n  /**\r\n   * The filename (\"nonbrowser-approved-packages.json\") for an optional policy configuration file\r\n   * that stores a list of NPM packages that have been approved for usage by Rush projects.\r\n   * This is part of a pair of config files, one for projects that run in a web browser\r\n   * (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else\r\n   * (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).\r\n   */\r\n  export const nonbrowserApprovedPackagesFilename: string = 'nonbrowser-approved-packages.json';\r\n\r\n  /**\r\n   * The folder name (\"common\") where Rush's common data will be stored.\r\n   */\r\n  export const commonFolderName: string = 'common';\r\n\r\n  /**\r\n   * The NPM scope (\"@rush-temp\") that is used for Rush's temporary projects.\r\n   */\r\n  export const rushTempNpmScope: string = '@rush-temp';\r\n\r\n  /**\r\n   * The folder name (\"temp\") under the common folder, or under the .rush folder in each project's directory where\r\n   * temporary files will be stored.\r\n   * Example: `C:\\MyRepo\\common\\temp`\r\n   */\r\n  export const rushTempFolderName: string = 'temp';\r\n\r\n  /**\r\n   * The folder name (\"projects\") where temporary projects will be stored.\r\n   * Example: `C:\\MyRepo\\common\\temp\\projects`\r\n   */\r\n  export const rushTempProjectsFolderName: string = 'projects';\r\n\r\n  /**\r\n   * The folder name (\"variants\") under which named variant configurations for\r\n   * alternate dependency sets may be found.\r\n   * Example: \"C:\\MyRepo\\common\\config\\rush\\variants\"\r\n   */\r\n  export const rushVariantsFolderName: string = 'variants';\r\n\r\n  /**\r\n   * The filename (\"npm-shrinkwrap.json\") used to store an installation plan for the NPM package manger.\r\n   */\r\n  export const npmShrinkwrapFilename: string = 'npm-shrinkwrap.json';\r\n\r\n  /**\r\n   * The filename (\"shrinkwrap.yaml\") used to store an installation plan for the PNPM package manger\r\n   * (PNPM version 2.x and earlier).\r\n   */\r\n  export const pnpmV1ShrinkwrapFilename: string = 'shrinkwrap.yaml';\r\n\r\n  /**\r\n   * The filename (\"pnpm-lock.yaml\") used to store an installation plan for the PNPM package manger\r\n   * (PNPM version 3.x and later).\r\n   */\r\n  export const pnpmV3ShrinkwrapFilename: string = 'pnpm-lock.yaml';\r\n\r\n  /**\r\n   * The filename (\"pnpmfile.js\") used to add custom configuration to PNPM\r\n   */\r\n  export const pnpmfileFilename: string = 'pnpmfile.js';\r\n\r\n  /**\r\n   * The filename (\"shrinkwrap.yaml\") used to store state for pnpm\r\n   */\r\n  export const yarnShrinkwrapFilename: string = 'yarn.lock';\r\n\r\n  /**\r\n   * The folder name (\"node_modules\") where NPM installs its packages.\r\n   */\r\n  export const nodeModulesFolderName: string = 'node_modules';\r\n\r\n  /**\r\n   * The filename (\"pinned-versions.json\") for an old configuration file that\r\n   * that is no longer supported.\r\n   *\r\n   * @deprecated This feature has been superseded by the \"preferredVersions\" setting\r\n   * in common-versions.json\r\n   */\r\n  // NOTE: Although this is marked as \"deprecated\", we will probably never retire it,\r\n  // since we always want to report the warning when someone upgrades an old repo.\r\n  export const pinnedVersionsFilename: string = 'pinned-versions.json';\r\n\r\n  /**\r\n   * The filename (\"common-versions.json\") for an optional configuration file\r\n   * that stores dependency version information that affects all projects in the repo.\r\n   * This configuration file should go in the \"common/config/rush\" folder.\r\n   */\r\n  export const commonVersionsFilename: string = 'common-versions.json';\r\n\r\n  /**\r\n   * The name of the per-project folder where project-specific Rush files are stored. For example,\r\n   * the package-deps files, which are used by commands to determine if a particular project needs to be rebuilt.\r\n   */\r\n  export const projectRushFolderName: string = '.rush';\r\n\r\n  /**\r\n   * Custom command line configuration file, which is used by rush for implementing\r\n   * custom command and options.\r\n   */\r\n  export const commandLineFilename: string = 'command-line.json';\r\n\r\n  export const versionPoliciesFilename: string = 'version-policies.json';\r\n\r\n  /**\r\n   * Experiments configuration file, which\r\n   */\r\n  export const experimentsFilename: string = 'experiments.json';\r\n\r\n  /**\r\n   * The URL (\"http://rushjs.io\") for the Rush web site.\r\n   */\r\n  export const rushWebSiteUrl: string = 'https://rushjs.io';\r\n\r\n  /**\r\n   * The name of the NPM package for the Rush tool (\"@microsoft/rush\").\r\n   */\r\n  export const rushPackageName: string = '@microsoft/rush';\r\n\r\n  /**\r\n   * The folder name (\"rush-recycler\") where Rush moves large folder trees\r\n   * before asynchronously deleting them.\r\n   */\r\n  export const rushRecyclerFolderName: string = 'rush-recycler';\r\n\r\n  /**\r\n   * The name of the file to drop in project-folder/.rush/temp/ containing a listing of the project's direct\r\n   * and indirect dependencies. This is used to detect if a project's dependencies have changed since the last build.\r\n   */\r\n  export const projectDependencyManifestFilename: string = 'shrinkwrap-deps.json';\r\n}\r\n"]}