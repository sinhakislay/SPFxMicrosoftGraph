{"version":3,"file":"VersionMismatchFinderEntity.js","sourceRoot":"","sources":["../../../src/logic/versionMismatch/VersionMismatchFinderEntity.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAa3D,MAAsB,2BAA2B;IAQ/C,YAAY,OAA4C;QACtD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;IAC7C,CAAC;CAMF;AAlBD,kEAkBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  PackageJsonDependency,\r\n  DependencyType\r\n} from '../../api/PackageJsonEditor';\r\n\r\nexport interface IVersionMismatchFinderEntityOptions {\r\n  friendlyName: string;\r\n  cyclicDependencyProjects: Set<string>;\r\n  skipRushCheck?: boolean;\r\n}\r\n\r\nexport abstract class VersionMismatchFinderEntity {\r\n  public readonly friendlyName: string;\r\n  public readonly cyclicDependencyProjects: Set<string>;\r\n  public readonly skipRushCheck: boolean | undefined;\r\n\r\n  public abstract filePath: string;\r\n  public abstract allDependencies: ReadonlyArray<PackageJsonDependency>;\r\n\r\n  constructor(options: IVersionMismatchFinderEntityOptions) {\r\n    this.friendlyName = options.friendlyName;\r\n    this.cyclicDependencyProjects = options.cyclicDependencyProjects;\r\n    this.skipRushCheck = options.skipRushCheck;\r\n  }\r\n\r\n  public abstract tryGetDependency(packageName: string): PackageJsonDependency | undefined;\r\n  public abstract tryGetDevDependency(packageName: string): PackageJsonDependency | undefined;\r\n  public abstract addOrUpdateDependency(packageName: string, newVersion: string, dependencyType: DependencyType): void;\r\n  public abstract saveIfModified(): boolean;\r\n}"]}