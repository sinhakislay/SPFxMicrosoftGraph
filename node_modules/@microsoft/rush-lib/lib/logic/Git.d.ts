import gitInfo = require('git-repo-info');
import { RushConfiguration } from '../api/RushConfiguration';
export declare class Git {
    private static _checkedGitPath;
    private static _gitPath;
    private static _checkedGitInfo;
    private static _gitInfo;
    private static _gitEmailResult;
    /**
     * Returns the path to the Git binary if found. Otherwise, return undefined.
     */
    static getGitPath(): string | undefined;
    /**
     * Returns true if the Git binary can be found.
     */
    static isGitPresent(): boolean;
    /**
     * Returns true if the Git binary was found and the current path is under a Git working tree.
     * @param repoInfo - If provided, do the check based on this Git repo info. If not provided,
     * the result of `Git.getGitInfo()` is used.
     */
    static isPathUnderGitWorkingTree(repoInfo?: gitInfo.GitRepoInfo): boolean;
    /**
     * If a Git email address is configured and is nonempty, this returns it.
     * Otherwise, undefined is returned.
     */
    static tryGetGitEmail(rushConfiguration: RushConfiguration): string | undefined;
    /**
     * If a Git email address is configured and is nonempty, this returns it.
     * Otherwise, configuration instructions are printed to the console,
     * and AlreadyReportedError is thrown.
     */
    static getGitEmail(rushConfiguration: RushConfiguration): string;
    /**
     * Get the folder where Git hooks should go for the current working tree.
     * Returns undefined if the current path is not under a Git working tree.
     */
    static getHooksFolder(): string | undefined;
    /**
     * Get information about the current Git working tree.
     * Returns undefined if the current path is not under a Git working tree.
     */
    static getGitInfo(): Readonly<gitInfo.GitRepoInfo> | undefined;
    private static _tryGetGitEmail;
}
//# sourceMappingURL=Git.d.ts.map