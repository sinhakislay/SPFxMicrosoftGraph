{"version":3,"file":"BasePackage.js","sourceRoot":"","sources":["../../../src/logic/base/BasePackage.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  JsonFile,\r\n  IPackageJson\r\n} from '@microsoft/node-core-library';\r\n\r\n/**\r\n * The type of dependency; used by IPackageDependency.\r\n */\r\nexport enum PackageDependencyKind {\r\n  Normal,\r\n  /**\r\n   * The dependency was listed in the optionalDependencies section of package.json.\r\n   */\r\n  Optional,\r\n\r\n  /**\r\n   * The dependency should be a symlink to a project that is locally built by Rush..\r\n   */\r\n  LocalLink\r\n}\r\n\r\nexport interface IPackageDependency {\r\n  /**\r\n   * The name of the dependency\r\n   */\r\n  name: string;\r\n  /**\r\n   * The requested version, which may be a pattern such as \"^1.2.3\"\r\n   */\r\n  versionRange: string;\r\n\r\n  /**\r\n   * The kind of dependency\r\n   */\r\n  kind: PackageDependencyKind;\r\n}\r\n\r\n/**\r\n * Represents a \"@rush-temp\" scoped package, which has our additional custom field\r\n * for tracking the dependency graph.\r\n */\r\nexport interface IRushTempPackageJson extends IPackageJson {\r\n  /**\r\n   * An extra setting written into package.json for temp packages, to track\r\n   * references to locally built projects.\r\n   */\r\n  rushDependencies?: { [key: string]: string };\r\n}\r\n\r\n/**\r\n * Represents an NPM package being processed by the \"rush link\" algorithm.\r\n */\r\nexport class BasePackage {\r\n  /**\r\n   * The \"name\" field from package.json\r\n   */\r\n  public name: string;\r\n\r\n  /**\r\n   * The package.json name can differ from the installation folder name, in the case of an NPM package alias\r\n   * such as this:\r\n   *\r\n   * ```\r\n   * \"dependencies\": {\r\n   *   \"@alias-scope/alias-name\": \"npm:target-name@^1.2.3\"\r\n   * }\r\n   * ```\r\n   *\r\n   * In this case the folder will be `node_modules/@alias-scope/alias-name`\r\n   * instead of `node_modules/target-name`.\r\n   */\r\n  public installedName: string;\r\n\r\n  /**\r\n   * The \"version\" field from package.json. This is expensive to read\r\n   * because we have to open the package.json file.  Only when DEBUG=true\r\n   */\r\n  public version: string | undefined;\r\n\r\n  /**\r\n   * The absolute path to the folder that contains package.json.\r\n   */\r\n  public folderPath: string;\r\n\r\n  /**\r\n   * The parent package, or undefined if this is the root of the tree.\r\n   */\r\n  public parent: BasePackage | undefined;\r\n\r\n  /**\r\n   * The raw package.json information for this Package\r\n   */\r\n  public packageJson: IRushTempPackageJson | undefined;\r\n\r\n  /**\r\n   * If this is a local path that we are planning to symlink to a target folder,\r\n   * then symlinkTargetFolderPath keeps track of the intended target.\r\n   */\r\n  public symlinkTargetFolderPath: string | undefined = undefined;\r\n\r\n  /**\r\n   * Packages that were placed in node_modules subfolders of this package.\r\n   * The child packages are not necessarily dependencies of this package.\r\n   */\r\n  public children: BasePackage[];\r\n  private _childrenByName: Map<string, BasePackage>;\r\n\r\n  /**\r\n   * Used by link managers, creates a virtual Package object that represents symbolic links\r\n   * which will be created later\r\n   */\r\n  public static createLinkedPackage(name: string,\r\n    version: string | undefined,\r\n    folderPath: string,\r\n    packageJson?: IRushTempPackageJson): BasePackage {\r\n    return new BasePackage(name, version, folderPath, packageJson);\r\n  }\r\n\r\n  /**\r\n   * Used by \"npm link\" to simulate a temp project that is missing from the common/node_modules\r\n   * folder (e.g. because it was added after the shrinkwrap file was regenerated).\r\n   * @param packageJsonFilename - Filename of the source package.json\r\n   *        Example: `C:\\MyRepo\\common\\temp\\projects\\project1\\package.json`\r\n   * @param targetFolderName - Filename where it should have been installed\r\n   *        Example: `C:\\MyRepo\\common\\temp\\node_modules\\@rush-temp\\project1`\r\n   */\r\n  public static createVirtualTempPackage(packageJsonFilename: string, installFolderName: string): BasePackage {\r\n    const packageJson: IRushTempPackageJson = JsonFile.load(packageJsonFilename);\r\n    return BasePackage.createLinkedPackage(packageJson.name, packageJson.version, installFolderName, packageJson);\r\n  }\r\n\r\n  public get nameAndVersion(): string {\r\n    let result: string = '';\r\n\r\n    if (this.name) {\r\n      result += this.name;\r\n    } else {\r\n      result += '(missing name)';\r\n    }\r\n    result += '@';\r\n    if (this.version) {\r\n      result += this.version;\r\n    } else {\r\n      result += '(missing version)';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public addChild<T extends BasePackage>(child: T): void {\r\n    if (child.parent) {\r\n      throw new Error('Child already has a parent');\r\n    }\r\n    if (this._childrenByName.has(child.name)) {\r\n      throw new Error('Child already exists');\r\n    }\r\n    child.parent = this;\r\n    this.children.push(child);\r\n    this._childrenByName.set(child.name, child);\r\n  }\r\n\r\n  public getChildByName(childPackageName: string): BasePackage | undefined {\r\n    return this._childrenByName.get(childPackageName);\r\n  }\r\n\r\n  public printTree(indent?: string): void {\r\n    if (!indent) {\r\n      indent = '';\r\n    }\r\n    console.log(indent + this.nameAndVersion);\r\n    for (const child of this.children) {\r\n      child.printTree(indent + '  ');\r\n    }\r\n  }\r\n\r\n  protected constructor(name: string,\r\n    version: string | undefined,\r\n    folderPath: string,\r\n    packageJson: IRushTempPackageJson | undefined) {\r\n\r\n    this.name = name;\r\n    this.packageJson = packageJson;\r\n    this.version = version;\r\n    this.folderPath = folderPath;\r\n\r\n    // Extract `@alias-scope/alias-name` from  `C:\\node_modules\\@alias-scope\\alias-name`\r\n    const pathParts: string[] = folderPath.split(/[\\\\\\/]/);\r\n    this.installedName = pathParts[pathParts.length - 1];\r\n    if (pathParts.length >= 2) {\r\n      // Is there an NPM scope?\r\n      const parentFolder: string = pathParts[pathParts.length - 2];\r\n      if (parentFolder[0] === '@') {\r\n        this.installedName = parentFolder + '/' + this.installedName;\r\n      }\r\n    }\r\n\r\n    this.children = [];\r\n    this._childrenByName = new Map<string, BasePackage>();\r\n  }\r\n}"]}