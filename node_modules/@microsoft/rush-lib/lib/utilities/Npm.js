"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const Utilities_1 = require("./Utilities");
const semver = require("semver");
class Npm {
    static publishedVersions(packageName, cwd, env, extraArgs = []) {
        const versions = [];
        try {
            const packageTime = Utilities_1.Utilities.executeCommandAndCaptureOutput('npm', ['view', packageName, 'time', '--json', ...extraArgs], cwd, env, true);
            if (packageTime && packageTime !== '') {
                Object.keys(JSON.parse(packageTime)).forEach(v => {
                    if (semver.valid(v)) {
                        versions.push(v);
                    }
                });
            }
            else {
                console.log(`Package ${packageName} time value does not exist. Fall back to versions.`);
                // time property does not exist. It happens sometimes. Fall back to versions.
                const packageVersions = Utilities_1.Utilities.executeCommandAndCaptureOutput('npm', ['view', packageName, 'versions', '--json', ...extraArgs], cwd, env, true);
                if (packageVersions && packageVersions.length > 0) {
                    (JSON.parse(packageVersions)).forEach(v => {
                        versions.push(v);
                    });
                }
                else {
                    console.log(`No version is found for ${packageName}`);
                }
            }
        }
        catch (error) {
            if (error.message.indexOf('npm ERR! 404') >= 0) {
                console.log(`Package ${packageName} does not exist in the registry.`);
            }
            else {
                console.log(`Failed to get NPM information about ${packageName}.`);
                throw error;
            }
        }
        return versions;
    }
}
exports.Npm = Npm;
//# sourceMappingURL=Npm.js.map