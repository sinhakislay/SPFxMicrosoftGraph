/**
 * SharePoint Framework support for building and extending client-side applications.
 *
 * @packagedocumentation
 */
export { default as ApplicationCustomizerContext, IApplicationCustomizerContextParameters as _IApplicationCustomizerContextParameters } from './extensibility/ApplicationCustomizerContext';
export { default as BaseApplicationCustomizer } from './extensibility/BaseApplicationCustomizer';
export { default as ApplicationAccessor } from './extensibility/ApplicationAccessor';
export { default as _DialogManagerConfiguration } from './extensibility/DialogManagerConfiguration';
export { default as _SearchQueryManager } from './extensibility/SearchQueryManager';
export { default as PlaceholderContent, IPlaceholderContentParameters as _IPlaceholderContentParameters } from './extensibility/placeholder/PlaceholderContent';
export { default as PlaceholderName } from './extensibility/placeholder/PlaceholderName';
export { default as _Placeholder, IPlaceholderEntry as _IPlaceholderEntry, IPlaceholderDefinition as _IPlaceholderDefinition } from './extensibility/placeholder/Placeholder';
export { default as PlaceholderProvider, IPlaceholderCreateContentOptions } from './extensibility/placeholder/PlaceholderProvider';
export { default as _PlaceholderManager } from './extensibility/placeholder/PlaceholderManager';
export { default as BaseApplication } from './BaseApplication';
export { default as _OnBeforeNavigationEventName } from './navigator/OnBeforeNavigationEventName';
export { default as BaseApplicationContext, IApplicationContextParameters as _IApplicationContextParameters } from './BaseApplicationContext';
export { default as _ApplicationManager } from './ApplicationManager';
export { default as _Navigator } from './navigator/Navigator';
export { INavigationResult as _INavigationResult, INavigationProperties as _INavigationProperties, NavigationOperation as _NavigationOperation, NavigationUnsupportedReason as _NavigationUnsupportedReason } from './navigator/INavigationResult';
export { default as _NavigationDataError, NavigationErrorCode as _NavigationErrorCode } from './navigator/NavigationDataError';
export { default as _PrefetchedDataEventArgs } from './navigator/PrefetchedDataEventArgs';
export { ApplicationLoadType as _ApplicationLoadType } from './ApplicationLoadType';
export { default as _SPThemeProvider, _IODSPThemeDataSource } from './pageChrome/SPThemeProvider';
export { default as _ISPPageChrome } from './pageChrome/ISPPageChrome';
//# sourceMappingURL=index.d.ts.map