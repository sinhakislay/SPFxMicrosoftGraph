import { SPError } from '@microsoft/sp-core-library';
/**
 * Web part error codes.
 *
 * @internal
 */
export declare enum NavigationErrorCode {
    /**
     * Failure to fetch navigation data.
     */
    fetchData = 0,
    /**
     * Failure to parse navigation data.
     */
    parseData = 1,
    /**
     * Unknown failure
     */
    unknown = 2
}
/**
 * Represents the contract of a Navigation Data Error.
 *
 * @internal
 */
export default class NavigationDataError<TPayload extends Object> extends SPError {
    private static _errorCodeToTemplateMap;
    private _errorId;
    private _isExpected;
    /**
     * Utility function to create an error response.
     * @param errorCode - Represents the navigation error code.
     * @param innerError - Represents the inner error.
     *
     * @returns An error object.
     */
    static createNavigationError(errorCode: NavigationErrorCode, innerError: Error): Error;
    private static _isExpectedError;
    private static _errorTemplate;
    /**
     * Gets the error Id.
     */
    readonly id: number;
    /**
     * Gets the error category.
     */
    readonly category: string;
    /**
     * Gets a value indicating whether the error is expected.
     */
    readonly isExpected: boolean;
    private constructor();
}
//# sourceMappingURL=NavigationDataError.d.ts.map