/**
 * Operation that gets executed from a navigation request.
 * This is used by SPFx applications to understand what are their next operations after navigating to a different page.
 *
 * @internal
 */
export var NavigationOperation;
(function (NavigationOperation) {
    /**
     * This operation updates the SPFx context but doesn't act on the application.
     * This includes extensions lifecycle operations, changing the PageContext object, etc.
     */
    NavigationOperation[NavigationOperation["UpdateContext"] = 0] = "UpdateContext";
    /**
     * This operation loads a new SPFx application.
     * This implies that the previous application will be disposed.
     */
    NavigationOperation[NavigationOperation["LoadApplication"] = 1] = "LoadApplication";
    /**
     * This operation happens when the URL doesn't map to a SPFx application or the preloaded data is in a corrupted
     * state.
     * The current application is responsible for handling this case.
     * This can mean open the URL in a different tab/window, going to error.aspx, or displaying an error in the console.
     */
    NavigationOperation[NavigationOperation["Unsupported"] = 2] = "Unsupported";
})(NavigationOperation || (NavigationOperation = {}));
/**
 * Specific reasons navigations may be unsupported.
 *
 * @internal
 */
export var NavigationUnsupportedReason;
(function (NavigationUnsupportedReason) {
    /**
     * Navigation was unsupported because the target url was not an SPFX application.
     */
    NavigationUnsupportedReason[NavigationUnsupportedReason["NonSPFX"] = 0] = "NonSPFX";
    /**
     * Since our applications aren't fully optimized to cleanup resources
     * we have a cap on the number of transitions before we should trigger
     * a full reload in order to flush the memory.
     */
    NavigationUnsupportedReason[NavigationUnsupportedReason["TransitionsExceeded"] = 1] = "TransitionsExceeded";
    /**
     * The target url points to a valid SPFX app however the locale is different
     * and we need to do a full reload to get scripts in the new locale.
     */
    NavigationUnsupportedReason[NavigationUnsupportedReason["LocaleChange"] = 2] = "LocaleChange";
    /**
     * App to App transitions have not yet been enabled for this user.
     */
    NavigationUnsupportedReason[NavigationUnsupportedReason["AppTransitionNotEnabled"] = 3] = "AppTransitionNotEnabled";
})(NavigationUnsupportedReason || (NavigationUnsupportedReason = {}));
//# sourceMappingURL=INavigationResult.js.map