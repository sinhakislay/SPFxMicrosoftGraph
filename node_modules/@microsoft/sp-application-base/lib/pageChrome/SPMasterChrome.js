// Copyright (c) Microsoft. All rights reserved.
import { _PerformanceLogger } from '@ms/sp-telemetry';
import { Flights } from '../common/Flights';
import SPGlobalErrorHandler from '../error/SPGlobalErrorHandler';
var SPMasterChrome = /** @class */ (function () {
    function SPMasterChrome() {
        this._isVisible = false;
        this._isDisposed = false;
        this._createPageChrome();
    }
    /**
     * Shows the chrome.
     */
    SPMasterChrome.prototype.show = function () {
        if (!this._isDisposed && !this._isVisible) {
            document.body.appendChild(this._chromeDiv);
            this._isVisible = true;
        }
    };
    /**
     * Hides the chrome.
     */
    SPMasterChrome.prototype.hide = function () {
        if (!this._isDisposed && this._isVisible) {
            this._chromeDiv = document.body.removeChild(this._chromeDiv);
            this._isVisible = false;
        }
    };
    /**
     * Disposes the Chrome
     */
    SPMasterChrome.prototype.dispose = function () {
        if (!this._isDisposed) {
            this._chromeDiv = document.body.removeChild(this._chromeDiv);
            delete this._suiteNavDiv;
            delete this._chromeDiv;
            this._isDisposed = true;
        }
    };
    Object.defineProperty(SPMasterChrome.prototype, "chromeDiv", {
        /**
         * Gets the chrome div
         */
        get: function () {
            return this._chromeDiv;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPMasterChrome.prototype, "suiteNavDiv", {
        /**
         * Gets the suite nav div
         */
        get: function () {
            return this._suiteNavDiv;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPMasterChrome.prototype, "isDisposed", {
        /**
         * Returns true if the object has already been disposed, otherwise false.
         */
        get: function () {
            return this._isDisposed;
        },
        enumerable: true,
        configurable: true
    });
    SPMasterChrome.prototype._createPageChrome = function () {
        _PerformanceLogger.devMark('SPPageChrome.createPageChromeMaster');
        // Page body
        document.body.className = 'ms-font-m';
        // Page Chrome div
        this._chromeDiv = document.createElement('div');
        var chromeDivClasses = 'SPPageChrome';
        if (Flights.isFluentEnabled) {
            chromeDivClasses += ' isFluent';
        }
        else {
            chromeDivClasses += ' isNotFluent';
        }
        if (Flights.preloadSuiteNav) {
            chromeDivClasses += ' withExternalSuiteNav';
        }
        this._chromeDiv.setAttribute('class', chromeDivClasses);
        // SuiteNav div
        if (Flights.preloadSuiteNav) {
            this._suiteNavDiv = document.getElementById('SuiteNavPlaceholder');
        }
        else {
            this._suiteNavDiv = document.createElement('div');
            this._suiteNavDiv.setAttribute('id', 'SuiteNavPlaceHolder');
            this._chromeDiv.appendChild(this._suiteNavDiv);
        }
        if (!window.onerror) {
            window.onerror = SPGlobalErrorHandler.basicTracingHandler;
        }
    };
    return SPMasterChrome;
}());
export default SPMasterChrome;
//# sourceMappingURL=SPMasterChrome.js.map