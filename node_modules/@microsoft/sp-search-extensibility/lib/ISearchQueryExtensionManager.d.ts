import { _IPreloadedCustomAction } from '@microsoft/sp-loader';
/**
 * Interface for the SearchQueryExtensionManager.
 *
 * @remarks
 * This is used so other packages can lazy import the implementation but work against the interface.
 *
 * @internal
 */
export interface ISearchQueryExtensionManager {
    /**
     * Loads and initializes all extensions coming from the custom actions or from the debug query string.
     *
     * @param customActions - Custom actions to load the extensions from.
     * @returns Number of extensions initialized.
     */
    initializeExtensions(customActions: _IPreloadedCustomAction[]): Promise<number>;
    /**
     * Given a search query string, returns a promise of the processed search query,
     * after going through all the search query modifiers.
     * @param queryText - Query text to process.
     * @returns Processed search query after going through all the extensions in order.
     */
    getSearchQuery(query: string): Promise<string>;
}
//# sourceMappingURL=ISearchQueryExtensionManager.d.ts.map