/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
import { Guid } from '@microsoft/sp-core-library';
import { cloneDeep, merge } from '@microsoft/sp-lodash-subset';
/**
 * TelemetrySettingsManager stores the configuration for Telemetry passed
 * down by the calling application during bootstrapping.
 *
 * @internal
 */
var DiagnosticsSettingsManager = /** @class */ (function () {
    function DiagnosticsSettingsManager() {
    }
    DiagnosticsSettingsManager.initialize = function (settings) {
        this.settings = cloneDeep(settings);
        this._initialized = true;
        this._normalizeContextIds();
    };
    DiagnosticsSettingsManager.updateSettings = function (settings) {
        this.settings = merge(this.settings, settings);
        this._normalizeContextIds();
    };
    Object.defineProperty(DiagnosticsSettingsManager, "isInitialized", {
        get: function () {
            return this._initialized;
        },
        enumerable: true,
        configurable: true
    });
    DiagnosticsSettingsManager._normalizeId = function (id) {
        var guid = Guid.tryParse(id);
        return guid ? guid.toString() : id;
    };
    DiagnosticsSettingsManager._normalizeContextIds = function () {
        this.settings.siteId = this._normalizeId(this.settings.siteId);
        this.settings.webId = this._normalizeId(this.settings.webId);
        this.settings.correlationId = this._normalizeId(this.settings.correlationId);
        if (this.settings.listId) {
            this.settings.listId = this._normalizeId(this.settings.listId);
            if (this.settings.listItemUniqueId) {
                this.settings.listItemUniqueId = this._normalizeId(this.settings.listItemUniqueId);
            }
        }
    };
    DiagnosticsSettingsManager._initialized = false;
    return DiagnosticsSettingsManager;
}());
export default DiagnosticsSettingsManager;
//# sourceMappingURL=DiagnosticsSettingsManager.js.map