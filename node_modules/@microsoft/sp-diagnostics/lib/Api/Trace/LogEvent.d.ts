/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
import { ServiceScope } from '@microsoft/sp-core-library';
import { default as LogSource } from '../LogSource';
import { LogLevel } from '../LogLevel';
import LogManager from '../LogManager/LogManager';
/**
 * An object that represents one log event.
 * @internal
 */
export default class LogEvent {
    /**
     * Allows process log events.
     */
    static logManager: LogManager<LogEvent>;
    private _timestamp;
    private _scope;
    private _source;
    private _message;
    private _error;
    private _level;
    private _prefix;
    /**
     * Use this method to log an event.
     *
     * @param source - source of the log event, e.g. class name of the source file
     * @param data - data of the log event
     * @param level - level of the log event
     * @param serviceScope - scope of the log event, e.g. component/web part
     */
    static log(source: string, data: string | Error, level: LogLevel, serviceScope?: ServiceScope): LogEvent;
    /**
     * Do not call this constructor directly. Use LogEvent.log instead.
     */
    constructor(source: string, data: string | Error, level: LogLevel, serviceScope?: ServiceScope);
    toString(): string;
    readonly timestamp: number;
    readonly level: LogLevel;
    readonly prefix: string;
    readonly scope: LogSource;
    readonly source: string;
    readonly message: string;
    readonly error: Error;
    private readonly _maxSourceLength;
    private readonly _maxMessageLength;
    private _validate;
    private _setData;
    private _getPrefix;
    private _getScope;
}
//# sourceMappingURL=LogEvent.d.ts.map