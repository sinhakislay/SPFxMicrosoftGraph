/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
import { LogLevel } from '../LogLevel';
import LogEvent from '../Trace/LogEvent';
/**
 * This handler adapts the sp-core-library Log to use the internal telemetry.
 * @internal
 */
var LogHandler = /** @class */ (function () {
    function LogHandler() {
    }
    LogHandler.prototype.verbose = function (source, message, scope) {
        var event = LogEvent.log(source, message, LogLevel.Verbose, scope);
        if (DEBUG && !DEPRECATED_UNIT_TEST) {
            console.log(event.toString()); // tslint:disable-line:no-console
        }
    };
    LogHandler.prototype.info = function (source, message, scope) {
        var event = LogEvent.log(source, message, LogLevel.Info, scope);
        if (DEBUG && !DEPRECATED_UNIT_TEST) {
            console.info(event.toString()); // tslint:disable-line:no-console
        }
    };
    LogHandler.prototype.warn = function (source, message, scope) {
        var event = LogEvent.log(source, message, LogLevel.Warning, scope);
        if (DEBUG && !DEPRECATED_UNIT_TEST) {
            console.warn(event.toString()); // tslint:disable-line:no-console
        }
    };
    LogHandler.prototype.error = function (source, error, scope) {
        var event = LogEvent.log(source, error, LogLevel.Error, scope);
        if (DEBUG && !DEPRECATED_UNIT_TEST) {
            console.error(event.toString()); // tslint:disable-line:no-console
        }
    };
    return LogHandler;
}());
export default LogHandler;
//# sourceMappingURL=LogHandler.js.map