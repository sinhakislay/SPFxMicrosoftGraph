/**
 * @file IEngagementHandler.ts
 * @copyright (c) Microsoft Corporation.  All rights reserved.
 */
/**
 * Engagement logger log data interface
 * @internal
 */
export interface IEngagementHandler {
    /** Engagement user action logging operation **/
    logData(data: IEngagementData): void;
}
/**
 * Engagement handler log data action interface
 * Represents a subset of Engagement Event Stream fields.
 * Full list can be located at: `\odsp-utilities\src\local\logging\events\Engagement.event.json`
 * @internal
 */
export interface IEngagementData {
    /**  name should follow `AppName.ControlName.ActionName` pattern **/
    name: string;
    /**  extraData is used to specify additional details regarding the action **/
    extraData?: {
        [key: string]: any;
    };
    /** used for tracking the site the user was on when the log was made **/
    siteId?: string;
    /** used for tracking the web the user was on when the log was made **/
    webId?: string;
    /** ABExperiment object used by experiments **/
    experiment?: IABExperiment;
    /** Site Type name of the relevant SharePoint web **/
    siteType?: SiteType;
    /** Component name of the relevant engagement event **/
    component?: Component;
    /** Feature name of the relevant recorded action **/
    currentPage?: CurrentPage;
    /** Feature name of the relevant recorded action **/
    feature?: Feature;
    /** Feature name of the relevant recorded action **/
    usageType?: UsageType;
    /** This indicates whether it is an intentional action by the user.
     * Setting isIntentional to true
     * will automatically publish engagement specific data to Interana
    */
    isIntentional?: boolean;
    /**
     * The Id of the relevant SharePoint list
     */
    listId?: string;
    /**
     * The Id of the relevant SharePoint document
     */
    docId?: string;
    /** used for tracking the item the user was on when the log was made **/
    listItemUniqueId?: string;
}
/**
 * ABExperiment interface.
 * @internal
 */
export interface IABExperiment {
    /** Checks if the current specified target is being selected to be part of the experiment **/
    IsExperimentOn?: () => boolean;
}
/**
 * Syte Type Classification for the syteType field in Engagement Event stream.
 * @internal
 */
export declare const enum SiteType {
    Group = "GroupSite",
    Team = "TeamSite",
    CommSite = "CommunicationSite",
    PublishingSite = "PublishingSite"
}
/**
 * CurrentPage Classification for the currentPage field in Engagement Event stream.
 * @internal
 */
export declare const enum CurrentPage {
    HomePage = "HomePage",
    NewsArticlePage = "NewsArticlePage",
    ArticlePage = "ArticlePage",
    ModernPage = "ModernPage",
    ClassicPage = "ClassicPage",
    NewsPage = "NewsPage",
    NewsDigestPage = "NewsDigestPage",
    Space = "Space"
}
/**
 * Component list for the component field in Engagement Event stream.
 * @internal
 */
export declare const enum Component {
    View = "View",
    Button = "Button",
    CommentDeleteCancelAction = "CommentDeleteCancelAction",
    CommentDeleteConfirmAction = "CommentDeleteConfirmAction",
    CommentDeleteOpenAction = "CommentDeleteOpenAction",
    CommentReplyAction = "CommentReplyAction",
    CommentReplyPostButton = "CommentReplyPostButton",
    CommentShowMoreButton = "CommentShowMoreButton",
    CommentsDisable = "CommentsDisable",
    CommentsEnable = "CommentsEnable",
    LoadMoreCommentReplies = "LoadMoreCommentReplies",
    LoadMoreComments = "LoadMoreComments",
    DiscardButton = "DiscardButton",
    DiscardOKButton = "DiscardOKButton",
    EditButton = "EditButton",
    NewApp = "NewApp",
    NewButton = "NewButton",
    NewDocLib = "NewDocLib",
    NewList = "NewList",
    NewPlan = "NewPlan",
    NewsAdd = "NewsAdd",
    NewsSeeAll = "NewsSeeAll",
    NewsArticleTitle = "NewsArticleTitle",
    NewsSiteTitle = "NewsSiteTitle",
    NewsImageArea = "NewsImageArea",
    NewsItemPinned = "NewsItemPinned",
    NewsPinnedItemRemoved = "NewsPinnedItemRemoved",
    NewsPinnedItemSorted = "NewsPinnedItemSorted",
    NewsSocialAction = "NewsSocialAction",
    SelectNewsToPin = "SelectNewsToPin",
    CreateNewsLinkFromHome = "CreateNewsLinkFromHome",
    CreateNewsPostFromHome = "CreateNewsPostFromHome",
    CreateNewsPostFromArticle = "CreateNewsPostFromArticle",
    NewsDraft = "NewsDraft",
    PostPublishAddToNav = "PostPublishAddToNav",
    PostPublishCopyAddress = "PostPublishCopyAddress",
    PostPublishEmail = "PostPublishEmail",
    PostPublishPostAsNews = "PostPublishPostAsNews",
    PromoteButton = "PromoteButton",
    PublishButton = "PublishButton",
    SaveButton = "SaveButton",
    CreateNewsDigest = "CreateNewsDigest",
    ContinueNewsDigest = "ContinueNewsDigest",
    SendNewsDigest = "SendNewsDigest",
    CancelNewsDigest = "CancelNewsDigest",
    ShareButton = "ShareButton",
    StartWithPageCopy = "StartWithPageCopy",
    StartWithNewsPostCopy = "StartWithNewsPostCopy",
    StartWithTemplate = "StartWithTemplate",
    ScrollBar = "ScrollBar",
    Header = "Header",
    Component = "Component",
    Extension = "Extension",
    PageSettingsButton = "PageSettingsButton",
    SaveAsTemplateButton = "SaveAsTemplateButton",
    SubmitButtonClick = "SubmitButtonClick",
    ReviewApprovalsButtonClick = "ReviewApprovalsButtonClick",
    SubmitDone = "SubmitDone",
    ApproveDone = "ApproveDone",
    RejectDone = "RejectDone",
    CheckedOutButton = "CheckedOutButton",
    BaseWPSelectedLayout = "BaseWPSelectedLayout",
    NewsRollup = "NewsRollup"
}
/**
 * UsageType list for the usageType field in Engagement Event stream.
 * @internal
 */
export declare const enum UsageType {
    Click = "Click",
    Scroll = "Scroll",
    ScrollUp = "ScrollUp",
    ScrollDown = "ScrollDown",
    Hover = "Hover",
    Load = "Load",
    PageLoad = "PageLoad",
    Render = "Render",
    Drag = "Drag",
    Drop = "Drop",
    Tap = "Tap",
    KeyDown = "KeyDown",
    KeyPress = "KeyPress",
    RightClick = "RightClick",
    Swipe = "Swipe"
}
/**
 * Feature list for the feature field in Engagement Event stream.
 * @internal
 */
export declare const enum Feature {
    News = "News",
    NewsDigest = "NewsDigest",
    WebPart = "WebPart",
    ScrollBar = "ScrollBar",
    Header = "Header",
    Canvas = "Canvas",
    LeftNav = "Leftnav",
    TopNav = "TopNav"
}
//# sourceMappingURL=IEngagementHandler.d.ts.map