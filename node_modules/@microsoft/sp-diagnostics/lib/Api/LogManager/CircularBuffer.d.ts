/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
/**
 * @internal
 */
export default class CircularBuffer<DataType> {
    /**
     * The size of the buffer
     */
    private _size;
    /**
     * Index of the newest item in the buffer
     */
    private _head;
    /**
     * The overall count of how many items have ever been added to the buffer.
     */
    private _count;
    private _buffer;
    private _isIterating;
    constructor(size: number);
    readonly count: number;
    push(item: DataType): void;
    forEach(handle: (value: DataType) => void): void;
    removeAll(): void;
    /**
     * Index of the oldest item in the buffer
     */
    private readonly _tail;
    private _isNotWrapped;
    /**
     * The next index should be index + 1, unless it reaches
     * the end of the buffer and needs to rewind to 0.
     */
    private _getNext;
    private _ensureNotIterating;
}
//# sourceMappingURL=CircularBuffer.d.ts.map