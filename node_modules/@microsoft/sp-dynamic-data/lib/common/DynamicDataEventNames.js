import { ALL_PROPERTIES_EVENT_PREFIX, EVENT_NAME_SEPARATOR, ANY_PROPERTY_EVENT_PREFIX, PROPERTY_EVENT_PREFIX, GET_ANNOTATED_PROPERTY_VALUE, GET_PROPERTY_VALUE, GET_PROPERTY_DEFINITIONS, GET_ALLOWED_EVENTS, DYNAMICDATAMANAGER_EXCEPTION } from './DynamicDataEventConstants';
/**
 * Event names for DynamicData related events.
 *
 * @internal
 */
var DynamicDataEventNames = /** @class */ (function () {
    function DynamicDataEventNames() {
    }
    /**
     * Returns the event name used when all properties in a Dynamic Data source have changed.
     * Example: DynamicData_AllPropertiesChanged_WebPart.<componentId>.<instanceId>
     *
     * @param sourceId - Id of the Dynamic Data source.
     */
    DynamicDataEventNames.getAllPropertiesChangedEventName = function (sourceId) {
        return "" + ALL_PROPERTIES_EVENT_PREFIX + EVENT_NAME_SEPARATOR + sourceId;
    };
    /**
     * Returns the event name used when any property in a Dynamic Data source has changed.
     * Example: DynamicData_AnyPropertyChanged_WebPart.<componentId>.<instanceId>
     *
     * @param sourceId - Id of the Dynamic Data source.
     */
    DynamicDataEventNames.getAnyPropertyChangedEventName = function (sourceId) {
        return "" + ANY_PROPERTY_EVENT_PREFIX + EVENT_NAME_SEPARATOR + sourceId;
    };
    /**
     * Returns the event name used when a properties in a Dynamic Data source has changed.
     * Example: DynamicData_PropertyChanged_WebPart.<componentId>.<instanceId>_myProperty
     *
     * @param sourceId - Id of the Dynamic Data source.
     * @param propertyId - Id of the property that has changed.
     */
    DynamicDataEventNames.getPropertyChangedEventName = function (sourceId, propertyId) {
        return "" + this.getPropertyChangedEventPrefix(sourceId) + EVENT_NAME_SEPARATOR + propertyId;
    };
    /**
     * Returns the event name prefix used when a property in a Dynamic Data source has changed.
     * This should not be used as a final name for an event, but to be used inside _getPropertyChangedEventName.
     * Example: DynamicData_PropertyChanged_WebPart.<componentId>.<instanceId>
     *
     * @param sourceId - Id of the Dynamic Data source.
     */
    DynamicDataEventNames.getPropertyChangedEventPrefix = function (sourceId) {
        return "" + PROPERTY_EVENT_PREFIX + EVENT_NAME_SEPARATOR + sourceId;
    };
    /**
     * Returns the event name used to publish and consume the event for when a specific property
     * has changed its value on a source.
     *
     * @param sourceId - Id of the Dynamic Data source.
     * @param propertyId - Property Id on the source.
     * @param isAnnotated - Indicates whether the event name is for the annotated value.
     */
    DynamicDataEventNames.getPropertyValueEventName = function (sourceId, propertyId, isAnnotated) {
        var scenario = isAnnotated ? GET_ANNOTATED_PROPERTY_VALUE : GET_PROPERTY_VALUE;
        return "" + scenario + EVENT_NAME_SEPARATOR + sourceId + EVENT_NAME_SEPARATOR + propertyId;
    };
    /**
     * Returns the event name used to publish and consume the event to request and receive the
     * property definitions from a specific Dynamic Data soource, from the parent window.
     *
     * @param sourceId - Id of the Dynamic Data source.
     */
    DynamicDataEventNames.getPropertyDefintionsEventName = function (sourceId) {
        return "" + GET_PROPERTY_DEFINITIONS + EVENT_NAME_SEPARATOR + sourceId;
    };
    /**
     * Returns the event name used to publish and consume the event to request and receive the
     * allowed events on a specific Dynamic Data soource, from the parent window.
     *
     * @param sourceId - Id of the Dynamic Data source.
     */
    DynamicDataEventNames.getAllowedEventsEventName = function (sourceId) {
        return "" + GET_ALLOWED_EVENTS + EVENT_NAME_SEPARATOR + sourceId;
    };
    DynamicDataEventNames.getDynamicDataManagerExceptionEventName = function (sourceId) {
        return "" + DYNAMICDATAMANAGER_EXCEPTION + EVENT_NAME_SEPARATOR + sourceId;
    };
    return DynamicDataEventNames;
}());
export { DynamicDataEventNames };
//# sourceMappingURL=DynamicDataEventNames.js.map