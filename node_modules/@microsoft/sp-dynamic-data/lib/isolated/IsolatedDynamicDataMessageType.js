/**
 * Enum defining the possible event types related to Dynamic Data when
 * the component is hosted in an isolated environment.
 *
 * @internal
 */
export var IsolatedDynamicDataMessageType;
(function (IsolatedDynamicDataMessageType) {
    /**
     * Notify that the list of sources changed in the parent page.
     */
    IsolatedDynamicDataMessageType["SourcesChangedEvent"] = "sourcesChangedEvent";
    /**
     * Notify that the source is changed.
     */
    IsolatedDynamicDataMessageType["NotifySourceChanged"] = "notifySourceChanged";
    /**
     * Notify that the property is changed.
     */
    IsolatedDynamicDataMessageType["NotifyPropertyChanged"] = "notifyPropertyChanged";
    /**
     * Register to the source changed event.
     */
    IsolatedDynamicDataMessageType["RegisterSourceChanged"] = "registerSourceChanged";
    /**
     * Unregister to the source changed event.
     */
    IsolatedDynamicDataMessageType["UnregisterSourceChanged"] = "unregisterSourceChanged";
    /**
     * Register to the property changed event.
     */
    IsolatedDynamicDataMessageType["RegisterPropertyChanged"] = "registerPropertyChanged";
    /**
     * Unregister the requested property changed event.
     */
    IsolatedDynamicDataMessageType["UnregisterPropertyChanged"] = "unregisterPropertyChanged";
    /**
     * Get all the available sources.
     */
    IsolatedDynamicDataMessageType["AllSources"] = "getSources";
    /**
     * Try get the requested source.
     */
    IsolatedDynamicDataMessageType["TryGetSource"] = "tryGetSource";
    /**
     * Add the source.
     */
    IsolatedDynamicDataMessageType["AddSource"] = "addSource";
    /**
     * Remove the source.
     */
    IsolatedDynamicDataMessageType["RemoveSource"] = "removeSource";
    /**
     * Return all the property definitions.
     */
    IsolatedDynamicDataMessageType["GetPropertyDefinitions"] = "getPropertyDefinitions";
    /**
     * Return the value of the specified property.
     */
    IsolatedDynamicDataMessageType["GetPropertyValue"] = "getPropertyValue";
    /**
     * Return the annotated value of the specified property.
     */
    IsolatedDynamicDataMessageType["GetAnnotatedPropertyValue"] = "getAnnotatedPropertyValue";
    /**
     * Return the list of allowed events on the source.
     */
    IsolatedDynamicDataMessageType["AllowedEvents"] = "allowedEvents";
    /**
     * Allows to send an event with data to the source, from the consumer.
     */
    IsolatedDynamicDataMessageType["SendEvent"] = "sendEvent";
    /**
     * When DynamicDataManager in the parent window throws an exception on invoking apis
     * then this event type is used to send that error details to the isolated window.
     */
    IsolatedDynamicDataMessageType["DynamicDataManagerException"] = "dynamicDataManagerException";
})(IsolatedDynamicDataMessageType || (IsolatedDynamicDataMessageType = {}));
//# sourceMappingURL=IsolatedDynamicDataMessageType.js.map