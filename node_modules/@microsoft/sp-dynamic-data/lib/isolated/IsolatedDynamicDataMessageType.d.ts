/**
 * Enum defining the possible event types related to Dynamic Data when
 * the component is hosted in an isolated environment.
 *
 * @internal
 */
export declare enum IsolatedDynamicDataMessageType {
    /**
     * Notify that the list of sources changed in the parent page.
     */
    SourcesChangedEvent = "sourcesChangedEvent",
    /**
     * Notify that the source is changed.
     */
    NotifySourceChanged = "notifySourceChanged",
    /**
     * Notify that the property is changed.
     */
    NotifyPropertyChanged = "notifyPropertyChanged",
    /**
     * Register to the source changed event.
     */
    RegisterSourceChanged = "registerSourceChanged",
    /**
     * Unregister to the source changed event.
     */
    UnregisterSourceChanged = "unregisterSourceChanged",
    /**
     * Register to the property changed event.
     */
    RegisterPropertyChanged = "registerPropertyChanged",
    /**
     * Unregister the requested property changed event.
     */
    UnregisterPropertyChanged = "unregisterPropertyChanged",
    /**
     * Get all the available sources.
     */
    AllSources = "getSources",
    /**
     * Try get the requested source.
     */
    TryGetSource = "tryGetSource",
    /**
     * Add the source.
     */
    AddSource = "addSource",
    /**
     * Remove the source.
     */
    RemoveSource = "removeSource",
    /**
     * Return all the property definitions.
     */
    GetPropertyDefinitions = "getPropertyDefinitions",
    /**
     * Return the value of the specified property.
     */
    GetPropertyValue = "getPropertyValue",
    /**
     * Return the annotated value of the specified property.
     */
    GetAnnotatedPropertyValue = "getAnnotatedPropertyValue",
    /**
     * Return the list of allowed events on the source.
     */
    AllowedEvents = "allowedEvents",
    /**
     * Allows to send an event with data to the source, from the consumer.
     */
    SendEvent = "sendEvent",
    /**
     * When DynamicDataManager in the parent window throws an exception on invoking apis
     * then this event type is used to send that error details to the isolated window.
     */
    DynamicDataManagerException = "dynamicDataManagerException"
}
//# sourceMappingURL=IsolatedDynamicDataMessageType.d.ts.map