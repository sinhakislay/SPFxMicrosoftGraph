import { Validate } from '@microsoft/sp-core-library';
import SPTimeZone from './SPTimeZone';
/**
  * This class is primarily used with the `PageContext` class.  It provides contextual information
  * for the SharePoint user that is accessing the page.
  *
  * @public
  */
var SPUser = /** @class */ (function () {
    /**
     * @internal
     */
    function SPUser(data) {
        this._validate(data);
        this._displayName = data.displayName || '';
        this._email = data.email || '';
        this._isAnonymousGuestUser = data.isAnonymousGuestUser;
        this._isExternalGuestUser = data.isExternalGuestUser;
        this._loginName = data.loginName || '';
        // Remove the or statement when changes reach Prod everywhere.
        this._preferUserTimeZone = data.preferUserTimeZone || false;
        this._timeZone = data.timeZoneInfo ?
            new SPTimeZone(data.timeZoneInfo) : undefined;
        this._firstDayOfWeek = data.firstDayOfWeek;
    }
    /**
     * Returns a JSON serializable object.
     * @internal
     */
    SPUser.prototype._serialize = function () {
        return {
            loginName: this.loginName,
            displayName: this.displayName,
            email: this.email,
            isAnonymousGuestUser: this.isAnonymousGuestUser,
            firstDayOfWeek: this.firstDayOfWeek,
            isExternalGuestUser: this.isExternalGuestUser,
            preferUserTimeZone: this.preferUserTimeZone
        };
    };
    Object.defineProperty(SPUser.prototype, "displayName", {
        /**
         * The display name for the current user.
         *
         * @remarks
         * Example: `"John Doe"`
         */
        get: function () {
            return this._displayName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "email", {
        /**
         * The email address for the current user.
         *
         * @remarks
         * Example: `"example@contoso.com"`
         */
        get: function () {
            return this._email;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "isAnonymousGuestUser", {
        /**
         * Returns if the current user is an anonymous guest.
         */
        get: function () {
            return this._isAnonymousGuestUser;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "isExternalGuestUser", {
        /**
         * Returns true if the current user is an external guest.
         */
        get: function () {
            return this._isExternalGuestUser;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "loginName", {
        /**
         * The login name for current user.
         *
         * @remarks
         * Example: on-premise user: `"domain\user"`, online user: `"user@domain.com"`
         */
        get: function () {
            return this._loginName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "preferUserTimeZone", {
        /**
         * This boolean represents if a the user or web's time zone settings should be used
         * to display the current time.
         */
        get: function () {
            return this._preferUserTimeZone;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "timeZoneInfo", {
        /**
         * Returns the user's regional timezone settings or undefined if they haven't been set.
         *
         * @beta
         */
        get: function () {
            return this._timeZone;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPUser.prototype, "firstDayOfWeek", {
        /**
         * Returns the user's regional first day of week setting or undefined if it hasn't been set.
         *
         * @beta
         */
        get: function () {
            // @todo VSO#490622: Consider better API structure to avoid confusing user with return value of undefined.
            return this._firstDayOfWeek;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Function that throws an exception if an ISPUserData object or its parameters are
     * null or undefined.
     *
     * @param data - Data used to construct an ISPUserData object
     */
    SPUser.prototype._validate = function (data) {
        Validate.isNotNullOrUndefined(data, 'ISPUserData object');
        Validate.isNotNullOrUndefined(data.isAnonymousGuestUser, 'isAnonymousGuestUser');
        Validate.isNotNullOrUndefined(data.isExternalGuestUser, 'isExternalGuestUser');
    };
    return SPUser;
}());
export default SPUser;
//# sourceMappingURL=SPUser.js.map