import SPPermission, { ISPPermission } from './SPPermission';
import { Guid } from '@microsoft/sp-core-library';
import { IODataBasePermission } from '@microsoft/sp-odata-types';
/**
 * Object that represents the data necessary to build an `SPList` object.
 *
 * @internal
 */
export interface ISPListData {
    /**
     * @alpha
     */
    baseTemplate: number;
    id: string;
    permissions: IODataBasePermission;
    serverRelativeUrl: string;
    title: string;
}
/**
 * JSON serializable object.
 * @alpha
 */
export interface ISPList {
    readonly id: string;
    readonly permissions: ISPPermission;
    readonly serverRelativeUrl: string;
    readonly title: string;
}
/**
  * This class is primarily used with the `PageContext` class.  It provides contextual
  * information for the SharePoint list that hosts the page.
  *
  * @public
  */
export default class SPList {
    private _id;
    private _permissions;
    private _serverRelativeUrl;
    private _title;
    /**
     * @internal
     */
    constructor(data: ISPListData);
    /**
     * Returns a JSON serializable object.
     * @internal
     */
    _serialize(): ISPList;
    /**
     * The GUID that identifies the SPList on the server. This property could be undefined
     * if the information isn't available.
     */
    readonly id: Guid;
    /**
     * Return the SPPermission object that represents the set of permissions that the
     * current user has for interacting with the list.
     */
    readonly permissions: SPPermission;
    /**
     * Returns the server-relative URL for this `SPList`.
     *
     * @remarks
     * Example: "/sites/PubSite"
     */
    readonly serverRelativeUrl: string;
    /**
     * Returns the title for this `SPList`.
     */
    readonly title: string;
    /**
     * Function that throws an exception if an `ISPListData` object or its parameters are
     * null or undefined.
     *
     * @param data - Data used to construct an `ISPListData` object
     */
    private _validate;
}
//# sourceMappingURL=SPList.d.ts.map