import { Guid, Validate } from '@microsoft/sp-core-library';
import O365GroupAssociation from './O365GroupAssociation';
/**
  * This class is primarily used with the `PageContext` class.  It provides contextual
  * information for the SharePoint site collection ("SPSite") that hosts the page.
  *
  * @public
  */
var SPSite = /** @class */ (function () {
    /**
     * @internal
     */
    function SPSite(data) {
        this._validate(data);
        this._absoluteUrl = data.absoluteUrl;
        this._cdnPrefix = data.cdnPrefix || '';
        this._classification = data.classification;
        this._correlationId = Guid.parse(data.correlationId);
        this._group = data.group ? new O365GroupAssociation(data.group) : undefined;
        this._id = Guid.parse(data.id);
        this._isNoScriptEnabled = data.isNoScriptEnabled;
        this._recycleBinItemCount = data.recycleBinItemCount;
        this._serverRelativeUrl = data.serverRelativeUrl;
        this._serverRequestPath = data.serverRequestPath;
        this._sitePagesEnabled = data.sitePagesEnabled;
        this._sitePagesFeatureVersion = data.sitePagesFeatureVersion ? data.sitePagesFeatureVersion : 0;
    }
    /**
     * Returns a JSON serializable object.
     * @internal
     */
    SPSite.prototype._serialize = function () {
        return {
            absoluteUrl: this.absoluteUrl,
            cdnPrefix: this.cdnPrefix,
            classification: this.classification,
            correlationId: this.correlationId.toString(),
            group: this.group ? this.group._serialize() : undefined,
            id: this.id.toString(),
            isNoScriptEnabled: this.isNoScriptEnabled,
            recycleBinItemCount: this.recycleBinItemCount,
            serverRelativeUrl: this.serverRelativeUrl,
            serverRequestPath: this.serverRequestPath,
            sitePagesEnabled: this.sitePagesEnabled
        };
    };
    Object.defineProperty(SPSite.prototype, "absoluteUrl", {
        /**
         * Returns the absolute URL for this SPSite.
         *
         * @remarks
         * Example: "https://example.com/sites/PubSite"
         */
        get: function () {
            return this._absoluteUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "cdnPrefix", {
        /**
         * Returns the prefix of the application's specified cdn or an empty string if there isn't one.
         */
        get: function () {
            return this._cdnPrefix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "classification", {
        /**
         * Returns the classification of the site.
         */
        get: function () {
            return this._classification;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "correlationId", {
        /**
         * Returns the correlation id to the current server request.
         */
        get: function () {
            return this._correlationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "group", {
        /**
         * Contextual information about the O365 Group associated with this site.
         * If there is no O365Group associated with the current site, this property will be undefined.
         */
        get: function () {
            return this._group;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "id", {
        /**
         * The GUID that identifies the SPSite on the server.
         */
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "isNoScriptEnabled", {
        /**
         * Returns true if isNoScript has been enabled on the SPSite.
         */
        get: function () {
            return this._isNoScriptEnabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "recycleBinItemCount", {
        /**
         * The amount of items in the recycle bin.
         */
        get: function () {
            return this._recycleBinItemCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "serverRelativeUrl", {
        /**
         * Returns the server-relative URL for this SPSite.
         *
         * @remarks
         * Example: "/sites/PubSite"
         */
        get: function () {
            return this._serverRelativeUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "serverRequestPath", {
        /**
         * Returns serverRelativeUrl of the original request.
         *
         * @remarks
         * Example: "/teams/SPClientTest/SitePages/Home.aspx"
         */
        get: function () {
            return this._serverRequestPath;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "sitePagesEnabled", {
        /**
         * Returns true if SitePages are enabled on this SPSite.
         */
        get: function () {
            return this._sitePagesEnabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPSite.prototype, "sitePagesFeatureVersion", {
        /**
         * Returns site pages feature version number if defined on this SPSite.
         * Example, for version 16.0.4.0 this would return 4.
         *
         * @alpha
         */
        get: function () {
            return this._sitePagesFeatureVersion;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Function that throws an exception if an ISPSiteData object or its parameters are
     * null or undefined.
     *
     * @param data - Data used to construct an ISPSiteData object
     */
    SPSite.prototype._validate = function (data) {
        Validate.isNotNullOrUndefined(data, 'ISPSiteData object');
        Validate.isNotNullOrUndefined(data.absoluteUrl, 'absoluteUrl');
        Validate.isNotNullOrUndefined(data.classification, 'classification');
        Validate.isNotNullOrUndefined(Guid.tryParse(data.correlationId), 'correlationId');
        Validate.isNotNullOrUndefined(Guid.tryParse(data.id), 'id');
        Validate.isNotNullOrUndefined(data.isNoScriptEnabled, 'isNoScriptEnabled');
        Validate.isNotNullOrUndefined(data.recycleBinItemCount, 'recycleBinItemCount');
        Validate.isNotNullOrUndefined(data.serverRequestPath, 'serverRequestPath');
        Validate.isNotNullOrUndefined(data.serverRelativeUrl, 'serverRelativeUrl');
        Validate.isNotNullOrUndefined(data.sitePagesEnabled, 'sitePagesEnabled');
    };
    return SPSite;
}());
export default SPSite;
//# sourceMappingURL=SPSite.js.map