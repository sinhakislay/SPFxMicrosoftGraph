// Copyright (c) Microsoft. All rights reserved.
import { Validate } from '@microsoft/sp-core-library';
// TODO: VSO740487 rename/move class
var ViewportLoaderUtility = /** @class */ (function () {
    function ViewportLoaderUtility() {
    }
    /**
     * Returns true if the component is in the initial page viewport.
     */
    ViewportLoaderUtility.isInInitialViewport = function (component, shouldOptimize) {
        if (shouldOptimize) {
            return component._registeredInViewport;
        }
        Validate.isNotNullOrUndefined(component, 'component');
        var viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        var top = component.domElement && component.domElement.getBoundingClientRect().top;
        var offsetFactor = 0.1;
        // 10% Offset from the bottom of the viewport for which we want to ignore from EUPL.
        // So component top should be at least 10% above from bottom to be counted into viewport
        var euplViewportOffset = Math.floor(viewportHeight * offsetFactor);
        return (window.pageYOffset + top) < (viewportHeight - euplViewportOffset);
    };
    return ViewportLoaderUtility;
}());
export default ViewportLoaderUtility;
//# sourceMappingURL=ViewportLoaderUtility.js.map