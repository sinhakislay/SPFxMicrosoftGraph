{"version":3,"file":"getId.js","sourceRoot":"../src/","sources":["getId.ts"],"names":[],"mappings":";;;IAEA,+BAA+B;IAC/B,IAAM,mBAAmB,GAAG,eAAe,CAAC;IAC5C,IAAM,iBAAiB,GAAG,MAAM,CAAC;IAEjC,kCAAkC;IAClC,IAAI,OAAO,GAAQ,qBAAS,EAAE,IAAI,EAAE,CAAC;IAErC,IAAI,OAAO,CAAC,mBAAmB,CAAC,KAAK,SAAS,EAAE;QAC9C,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;KAClC;IAED;;;;OAIG;IACH,SAAgB,KAAK,CAAC,MAAe;QACnC,IAAI,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,EAAE,CAAC;QAE3C,OAAO,CAAC,MAAM,IAAI,iBAAiB,CAAC,GAAG,KAAK,CAAC;IAC/C,CAAC;IAJD,sBAIC;IAED;;;;OAIG;IACH,SAAgB,QAAQ,CAAC,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QAC1C,OAAO,CAAC,mBAAmB,CAAC,GAAG,OAAO,CAAC;IACzC,CAAC;IAFD,4BAEC","sourcesContent":["import { getWindow } from './dom/getWindow';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// tslint:disable-next-line:no-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix || DEFAULT_ID_STRING) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n"]}