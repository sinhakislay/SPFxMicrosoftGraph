import { LogLevel } from '../../../../Stores/TraceDisplayStore';
import { formatTimestamp } from './traceFormatting';
import strings from './../TraceDisplay.resx';
var HEADER = 'data:text/csv;charset=utf-8';
var NEWLINE = '\n';
var FILENAME = 'spfx_trace_logs.csv';
export function triggerCsvDownload(traces) {
    var tracesLength = traces.length;
    if (tracesLength === 0) {
        return;
    }
    var csvContent = _generateCsvContent(traces);
    var link = document.createElement('a');
    link.setAttribute('href', encodeURI(HEADER + "," + csvContent));
    link.setAttribute('download', FILENAME);
    link.setAttribute('data-automation-id', 'trace-csv-download-anchor');
    document.body.appendChild(link);
    link.click(); // This will download the data file named "spfx_trace_logs.csv".
    document.body.removeChild(link);
}
function _generateCsvContent(traces) {
    var headerLine = [
        strings.TimestampHeaderLabel,
        strings.LevelHeaderLabel,
        strings.ScopeHeaderLabel,
        strings.SourceHeaderLabel,
        strings.MessageHeaderLabel
    ].map(_escapeCsvField).join(',');
    return "" + headerLine + NEWLINE + traces.map(_generateCsvLine).join(NEWLINE);
}
function _generateCsvLine(trace) {
    var logEventArray = [
        formatTimestamp(trace.timestamp),
        (trace.level) ? LogLevel[trace.level] : ' ',
        trace.source,
        (trace.message) ? trace.message : ((trace.error) ? trace.error.message : ' ')
    ];
    return logEventArray.map(_escapeCsvField).join(',');
}
function _escapeCsvField(rawField) {
    if (!rawField) {
        return ''; // If the field is undefined or empty, return an empty field
    }
    // Examples:
    // '"' -> '""""'
    // ',' -> '","'
    // '\n' -> '"\n"'
    // 'asdf"asdf' -> '"asdf""asdf"'
    // 'a"b,c\nd' -> '"a""b,c\nd"'
    var escapedField = rawField.replace(/(")/g, '""'); // Escape quotes to double quotes
    if (escapedField.match(/([,"\n])/)) { // Detect commas, quotes, and newlines
        escapedField = "\"" + escapedField + "\""; // Wrap the field in quotes if it contains any of those characters
    }
    return escapedField;
}
//# sourceMappingURL=CsvRenderer.js.map