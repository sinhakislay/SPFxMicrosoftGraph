import { DynamicDataProvider, DynamicProperty } from '@microsoft/sp-component-base';
import { IDynamicDataSource } from '@microsoft/sp-dynamic-data';
import { IPropertyPaneDynamicFieldProps } from '../../propertyPaneFields/propertyPaneDynamicField/IPropertyPaneDynamicField';
/**
 * @internal
 */
export interface IDynamicDataWidgetEntryProps {
    /**
     * A unique key of the property pane group field, in which the widget is rendered.
     */
    parentKey: string;
    /**
     * Selected source in the data source dropdown
     */
    selectedSource: IDynamicDataSource;
    /**
     * Display text of the selected property.
     */
    selectedPropertyText: string;
    /**
     * Selected property id.
     */
    selectedPropertyId: string;
    /**
     * Target property associated with the entry.
     */
    targetProperty: string;
    /**
     * Value of the target property.
     */
    value: DynamicProperty<any>;
    /**
     * Label for the entry.
     */
    label?: string;
    /**
     * Dynamic data provoder of the component.
     */
    dynamicDataProvider: DynamicDataProvider;
    /**
     * Callback when the dynamic data changes on the widget entry.
     */
    onChange: (targetProperty: string, dynamicProperty: DynamicProperty<{}>) => void;
    /**
   * Indicates to what depth of property values are shown on the
   * property pane dynamic data widget.
   *
   * If not specified, then max of 2 levels of propert value will be shown.
   */
    propertyValueDepth?: number;
}
/**
 * @internal
 */
export interface IDynamicDataWidgetEntryState {
    selectedSubPropertyText: string | undefined;
    selectedSubPropertyPath: string | undefined;
}
/**
 * @internal
 */
export interface IDynamicDataWidgetEntry {
    /**
     * Target property associated with the entry.
     */
    targetProperty: string;
    /**
     * Value of the target property.
     */
    value: DynamicProperty<any>;
    /**
     * Label for the entry.
     */
    properties: IPropertyPaneDynamicFieldProps;
}
//# sourceMappingURL=IDynamicDataWidgetEntry.d.ts.map