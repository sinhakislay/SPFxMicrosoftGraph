/**
 * Enum describing the property pane life cycle events.
 *
 * @internal
 */
export declare const enum PropertyPaneLifeCycleEvent {
    /**
     * Event indicating the start of the component's configuration in the PropertyPane.
     *
     * @remarks
     * This event is triggered in the following scenarios:
     *  - After user clicks on 'configure' button or
     *  - After user invokes 'openPropertyPane' or 'refreshPropertyPane' from a component or
     *  - When the user switches components and the new component will get the event.
     */
    ConfigurationStart = 1,
    /**
     * Event indicating that the component's configuration is complete in the PropertyPane.
     *
     * @remarks
     * This event is triggered in the following scenarios:
     *  - When the CONFIGURATION_COMPLETE_TIMEOUT(currently the value is 5 secs) elapses after the last change and
     *    the PropertyPane is still in focus.
     *  - If the PropertyPane is closed, before the CONFIGURATION_COMPLETE_TIMEOUT elapses.
     *      In this case 'ConfigurationComplete' is fired before the 'Closed' is fired.
     *  - If the ApplyClicked event is triggered, before the CONFIGURATION_COMPLETE_TIMEOUT elapses.
     *  - When the user switches components and the current component will get the event.
     */
    ConfigurationComplete = 2,
    /**
     * Event indicating that the PropertyPane is opened.
     *
     * @remarks
     * This event is triggered after the PropertyPane opens(slides in). This happens in the following cases:
     *  - When the user tries to configure using the 'configure' button or calling openPropertyPane or
     *    refreshPropertyPane from the component
     *    while the PropertyPane is closed.
     *
     * This event is fired before the 'ConfigurationStart' event is fired.
     */
    Opened = 3,
    /**
     * Event indicating that the PropertyPane is closed.
     *
     * @remarks
     * This event is triggered after the PropertyPane is closed(slides out). This happens in two cases:
     *  - When user clicks 'x' button on the PropertyPane.
     *  - When user toggles the already open PropertyPane.
     */
    Closed = 4,
    /**
     * Event indicating that the 'Apply' button is clicked on the PropertyPane.
     *
     * @remarks
     * This event is triggered only on the non-reactive PropertyPane.
     */
    ApplyClicked = 5,
    /**
     * Event indicating that the PropertyPane lost the focus.
     *
     * @remarks
     * This event is triggered when 'Alt + P'(this is the key combination to toggle the property pane focus)
     * is pressed while the PropertyPane is in focus. This results in PropertyPane loosing the focus and
     * it's associated component will get back the focus.
     */
    LostFocus = 6,
    /**
     * Event indicating that the active web part has changed.
     * @remarks
     *
     * This event indicates either of the following two things:
     *
     *  - A new component has requested to configure or
     *
     *  - The current component has requested to open/toggle the property pane while it's closed.
     *
     */
    ActiveWebPartChanged = 7
}
/**
 * Callback for the property pane life cycle event.
 *
 * @alpha
 */
export interface ILifeCycleEventCallback {
    (event: PropertyPaneLifeCycleEvent, componentInstanceId?: string): void;
}
//# sourceMappingURL=PropertyPaneLifeCycleEvent.d.ts.map