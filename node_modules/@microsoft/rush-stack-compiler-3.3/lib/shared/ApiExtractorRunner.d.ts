import { ITerminalProvider } from '@microsoft/node-core-library';
import { ExtractorConfig, IExtractorInvokeOptions } from '@microsoft/api-extractor';
import * as ApiExtractor from '@microsoft/api-extractor';
import { RushStackCompilerBase, IRushStackCompilerBaseOptions } from './RushStackCompilerBase';
/**
 * The ApiExtractorTask uses the api-extractor tool to analyze a project for public APIs. api-extractor will detect
 * common problems and generate a report of the exported public API. The task uses the entry point of a project to
 * find the aliased exports of the project. An api-extractor.ts file is generated for the project in the temp folder.
 * @beta
 */
export declare class ApiExtractorRunner extends RushStackCompilerBase {
    static apiExtractor: typeof ApiExtractor;
    private _extractorConfig;
    private _extractorOptions;
    constructor(extractorConfig: ExtractorConfig, extractorOptions: IExtractorInvokeOptions, rootPath: string, terminalProvider: ITerminalProvider);
    constructor(options: IRushStackCompilerBaseOptions, extractorConfig: ExtractorConfig, extractorOptions: IExtractorInvokeOptions, rootPath: string, terminalProvider: ITerminalProvider);
    invoke(): Promise<void>;
}
//# sourceMappingURL=ApiExtractorRunner.d.ts.map