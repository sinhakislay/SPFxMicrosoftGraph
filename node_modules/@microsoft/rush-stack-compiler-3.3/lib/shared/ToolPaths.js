"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const node_core_library_1 = require("@microsoft/node-core-library");
const path = require("path");
/**
 * @beta
 */
class ToolPaths {
    static get typescriptPackagePath() {
        if (!ToolPaths._typescriptPackagePath) {
            ToolPaths._typescriptPackagePath = ToolPaths._getPackagePath('typescript');
            if (!ToolPaths._typescriptPackagePath) {
                throw new Error('Unable to find "typescript" package.');
            }
        }
        return ToolPaths._typescriptPackagePath;
    }
    static get typescriptPackageJson() {
        return node_core_library_1.JsonFile.load(path.join(ToolPaths.typescriptPackagePath, 'package.json'));
    }
    static get tslintPackagePath() {
        if (!ToolPaths._tslintPackagePath) {
            ToolPaths._tslintPackagePath = ToolPaths._getPackagePath('tslint');
            if (!ToolPaths._tslintPackagePath) {
                throw new Error('Unable to find "tslint" package.');
            }
        }
        return ToolPaths._tslintPackagePath;
    }
    static get tslintPackageJson() {
        return node_core_library_1.JsonFile.load(path.join(ToolPaths.tslintPackagePath, 'package.json'));
    }
    static _getPackagePath(packageName) {
        const packageJsonPath = ToolPaths._getPackageJsonPath(packageName);
        return packageJsonPath ? path.dirname(packageJsonPath) : undefined;
    }
    static _getPackageJsonPath(packageName) {
        const lookup = new node_core_library_1.PackageJsonLookup();
        const mainEntryPath = require.resolve(packageName);
        return lookup.tryGetPackageJsonFilePathFor(mainEntryPath);
    }
}
exports.ToolPaths = ToolPaths;
//# sourceMappingURL=ToolPaths.js.map