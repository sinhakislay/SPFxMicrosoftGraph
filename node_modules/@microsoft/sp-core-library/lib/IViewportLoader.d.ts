import IViewportAwareComponent from './IViewportAwareComponent';
/**
 * A contract for viewport loaders that can load and render viewport aware components.
 *
 * @internal
 */
interface IViewportLoader {
    /**
     * Registers a viewport aware component and allows it to be rendered only when inside the
     * viewport.
     * @param component - The viewport aware component to be registered
     * @param scrollableParent - Optional parameter to allow event listeners for scrollable parents
     */
    register: (component: IViewportAwareComponent, scrollableParent?: HTMLElement) => void;
    /**
     * Unregisters a loaded component which should not be tracked any more.
     */
    unregister: (component: IViewportAwareComponent) => void;
    /**
     * Load registered components not in the viewport by gradually increasing viewport offset.
     */
    loadOutsideViewport: () => void;
    /**
     * Returns whether the IntersectionObserver optimization is supported.
     */
    optimizeViewportLoader: () => boolean;
}
export default IViewportLoader;
//# sourceMappingURL=IViewportLoader.d.ts.map