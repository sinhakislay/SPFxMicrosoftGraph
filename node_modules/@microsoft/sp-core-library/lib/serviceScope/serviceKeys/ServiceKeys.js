/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 */
import ServiceKey from '../ServiceKey';
/**
 * Centralized list of service keys used.
 * Maintaining all the service keys here, would make consumption of services
 * free of any cyclic dependencies.
 *
 * @internal
 */
var ServiceKeys = /** @class */ (function () {
    function ServiceKeys() {
    }
    /**
     * A unique ServiceKey to identify the ParentIframeCommunicator as a service in the ServiceScope.
     *
     * @remarks
     * This is a slightly special case where we can't provide a default implementation because it depends
     * on a context which only exists in the isolated web part scenario. Hence, consuming this service key
     * in non-isolated scenarios will throw the below error.
     */
    ServiceKeys.parentIFrameCommunicatorServiceKey = ServiceKey.createCustom('isolated-webpart-application:ParentIframeCommunicator', function () { throw new Error('ParentIframeCommunicator cannot be consumed until it is provided.'); });
    return ServiceKeys;
}());
export { ServiceKeys };
//# sourceMappingURL=ServiceKeys.js.map