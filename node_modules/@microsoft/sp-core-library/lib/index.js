/**
 * SharePoint Framework core libraries.
 *
 * @remarks
 * This package provides a foundation of core classes that ensure a consistent character
 * across all the other SharePoint Framework APIs.  Because this package is a dependency
 * of every other package, its design prioritizes small code size and broad applicability,
 * versus flexibility or richness of features.
 *
 * @packagedocumentation
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
export { default as _BrowserDetection } from './BrowserDetection';
export { default as DisplayMode } from './DisplayMode';
export { default as _ClientManifestData } from './ClientManifestData';
export { default as Guid } from './Guid';
export { default as JsonUtilities } from './JsonUtilities';
export { default as Text } from './Text';
export { default as Version } from './Version';
export { default as Validate } from './Validate';
export { default as UrlUtilities } from './url/UrlUtilities';
export { default as UrlQueryParameterCollection } from './url/UrlQueryParameterCollection';
export { default as TimeProvider } from './serviceScope/provider/TimeProvider';
export { default as RandomNumberGenerator } from './serviceScope/provider/RandomNumberGenerator';
export { default as ServiceKey } from './serviceScope/ServiceKey';
export { default as ServiceScope } from './serviceScope/ServiceScope';
export { default as Session } from './Session';
export { default as Environment, EnvironmentType } from './Environment';
export { default as _SPFlight } from './SPFlight';
export { default as _SPKillSwitch } from './SPKillSwitch';
export { default as SPError } from './SPError';
export { default as Log } from './log/Log';
// Events
export { default as SPEvent } from './events/SPEvent';
export { default as SPEventArgs } from './events/SPEventArgs';
export { default as _SPEventManager } from './events/SPEventManager';
// Backwards compatibility for bundles that referenced the originally shipped names
// "Event" and "EventArgs" (which turned out to conflict with the DOM API).
import { default as SPEvent } from './events/SPEvent';
import { default as SPEventArgs } from './events/SPEventArgs';
/**
 * DO NOT USE THIS DEFINITION.
 * @remarks
 * This is a backwards compatibility shim for legacy third-party bundles that imported the
 * old "Event" class.  It was renamed to solve a naming conflict with the brower DOM "Event".
 * @internal @preapproved
 * @deprecated Use the SPEvent class instead.
 */
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    function Event() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Event;
}(SPEvent));
export { Event };
/**
 * DO NOT USE THIS DEFINITION.
 * @remarks
 * This is a backwards compatibility shim for legacy third-party bundles that imported the
 * old "EventArgs" class.  It was renamed to solve a naming conflict with the brower DOM "Event".
 * @internal @preapproved
 * @deprecated Use the SPEvent class instead.
 */
var EventArgs = /** @class */ (function (_super) {
    __extends(EventArgs, _super);
    function EventArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EventArgs;
}(SPEventArgs));
export { EventArgs };
export { default as _DeferredClass } from './deferredClass/DeferredClass';
export { BrowserUtilities as _BrowserUtilities } from './BrowserUtilities';
export { Envoy as _Envoy } from './envoy/Envoy';
export { ServiceKeys as _ServiceKeys } from './serviceScope/serviceKeys/ServiceKeys';
//# sourceMappingURL=index.js.map