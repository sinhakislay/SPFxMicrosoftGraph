/**
 * Implemented by an object that supports a disposal lifecycle.
 *
 * @remarks
 * The dispose event allows an object to free any resources that it allocated
 * before its lifecycle ends.
 *
 * @public
 */
export interface IDisposable {
    /**
     * Returns true if the dispose() method has been called.  Once an object is disposed,
     * it remains in this state permanently.
     *
     * @remarks
     * After the object has been disposed, do not call its methods or access its properties.
     */
    isDisposed: boolean;
    /**
     * This method is called to permanently dispose the object.
     *
     * @remarks
     * After the object has been disposed, do not call its methods or access its properties.
     */
    dispose(): void;
}
//# sourceMappingURL=IDisposable.d.ts.map