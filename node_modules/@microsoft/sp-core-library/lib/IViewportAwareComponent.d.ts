/**
 * Interface to support lazy loading of components.
 *
 * A viewport aware component is loaded by priority depending on its position relative to
 * the viewport. Components outside the viewport will be loaded either when the user scrolls
 * to them or all the components within the viewport have already been rendered, whichever
 * happens first.
 *
 * @internal
 */
interface IViewportAwareComponent {
    /**
     * If true, this means that the component has been begun loading and has been inside
     * of the viewport. It may not have finished loading.
     *
     * For components in the initial viewport, this becomes true at start.
     * For the rest, it will flip to true when the component enters the viewport.
     *
     * NOTE: Do not update or use to track presence of components in the viewport.
     */
    _registeredInViewport: boolean;
    /**
     * The DOM element of the viewport-aware component.
     */
    domElement: HTMLElement;
    /**
     * Render component when it is in the viewport.
     */
    _onInViewport: () => void;
}
export default IViewportAwareComponent;
//# sourceMappingURL=IViewportAwareComponent.d.ts.map