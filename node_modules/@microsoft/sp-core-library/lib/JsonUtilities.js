// Copyright (c) Microsoft. All rights reserved.
/**
 * Utililty code to help manipulate JSON objects/strings.
 * See {@link http://www.json.org} for more information.
 *
 * @alpha
 */
var JsonUtilities = /** @class */ (function () {
    function JsonUtilities() {
    }
    /**
     * Encode a json string such that it can be safely transported over a network and be processed
     * in the server side code. And also safely transported back to the client and consumed by
     * JSON.parse().
     *
     * @param json - the json string to encode.
     */
    JsonUtilities.encode = function (json) {
        // Note from Manish:
        // Need for this stems from the
        // fact that JSON.stringify() does not encode all the required characters to make it safe to be
        // transported over a network. Neither does it provide an option to. Further, one might think
        // that JSON is a subset of Javascript, but it turns out that it is not. It allows for certain
        // characters that are treated as syntax errors in Javascript. On top of that the .Net WCF
        // javascript deserializer expects the JSON strings in certain format for it deserialize them
        // correctly. All in all, we need to do some special encoding to transport JSON strings over the
        // network.
        //
        // See https://github.com/judofyr/timeless/commit/9212af0a8d2124b92a7e4c6355007e4b4b0ae71d
        if (!json) {
            return undefined;
        }
        JsonUtilities._escapableChars.lastIndex = 0;
        return JsonUtilities._escapableChars.test(json) ? json.replace(this._escapableChars, function (a) {
            var c = JsonUtilities._substibuteChars[a];
            return typeof c === 'string' ? c : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
        }) : json;
    };
    /**
     * The list of characters that need to be escaped and their substitute characters
     */
    /* tslint:disable:max-line-length */
    JsonUtilities._escapableChars = /[\\\"\'\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    /* tslint:enable:max-line-length */
    JsonUtilities._substibuteChars = {
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"': '\\"',
        '\'': '\\\'',
        '\\': '\\\\'
    };
    return JsonUtilities;
}());
export default JsonUtilities;
//# sourceMappingURL=JsonUtilities.js.map