/**
 * Base communication layer for the SharePoint Framework
 *
 * @remarks
 * This package defines the base communication layer for
 * the SharePoint Framework.  For REST calls, it handles authentication,
 * logging, diagnostics, and batching.  It also simplifies requests by
 * adding default headers that follow the recommended best practices.
 *
 * @packagedocumentation
 */
export { IFetchProvider } from './httpClient/FetchProvider';
export { default as HttpClient, IHttpClientOptions } from './httpClient/HttpClient';
export { default as HttpClientConfiguration, IHttpClientConfiguration, IHttpClientConfigurations } from './httpClient/HttpClientConfiguration';
export { default as HttpClientResponse } from './httpClient/HttpClientResponse';
export { default as IDigestCache } from './spHttpClient/IDigestCache';
export { default as DigestCache } from './spHttpClient/DigestCache';
export { default as SPHttpClient, ISPHttpClientOptions } from './spHttpClient/SPHttpClient';
export { default as SPHttpClientCommonConfiguration, ISPHttpClientCommonConfiguration } from './spHttpClient/SPHttpClientCommonConfiguration';
export { default as SPHttpClientConfiguration, ISPHttpClientConfiguration, ISPHttpClientConfigurations } from './spHttpClient/SPHttpClientConfiguration';
export { default as SPHttpClientResponse } from './spHttpClient/SPHttpClientResponse';
export { SPHttpHeader } from './spHttpClient/SPHttpHeader';
export { default as SPHttpClientBatchConfiguration, ISPHttpClientBatchConfiguration, ISPHttpClientBatchConfigurations } from './spHttpClient/SPHttpClientBatchConfiguration';
export { default as SPHttpClientBatch, ISPHttpClientBatchCreationOptions, ISPHttpClientBatchOptions } from './spHttpClient/SPHttpClientBatch';
export { default as ODataVersion } from './spHttpClient/ODataVersion';
export { default as OAuthTokenProvider } from './oauthTokenProvider/OAuthTokenProvider';
export { default as _AadTokenProviders } from './oauthTokenProvider/AadTokenProviders';
export { default as _AadConstants } from './oauthTokenProvider/AadConstants';
export { default as _GraphHttpClient, IGraphHttpClientOptions as _IGraphHttpClientOptions } from './graphHttpClient/GraphHttpClient';
export { default as _GraphHttpClientResponse } from './graphHttpClient/GraphHttpClientResponse';
export { default as _GraphHttpClientConfiguration, IGraphHttpClientConfiguration as _IGraphHttpClientConfiguration, IGraphHttpClientConfigurations as _IGraphHttpClientConfigurations } from './graphHttpClient/GraphHttpClientConfiguration';
export { default as _GraphHttpClientContext } from './graphHttpClient/GraphHttpClientContext';
export { default as AadTokenProvider, TokenAcquisitionEventArgs } from './oauthTokenProvider/AadTokenProvider';
export { IAadTokenProviderConfiguration, ITokenAcquisitionEventArgs } from './oauthTokenProvider/IAadTokenProvider';
export { IAadTokenProvider } from './oauthTokenProvider/IAadTokenProvider';
export { default as AadHttpClient, IAadHttpClientOptions } from './aadHttpClient/AadHttpClient';
export { default as AadHttpClientConfiguration, IAadHttpClientConfiguration, IAadHttpClientConfigurations } from './aadHttpClient/AadHttpClientConfiguration';
export { default as AadHttpClientFactory } from './aadHttpClient/AadHttpClientFactory';
export { default as AadTokenProviderFactory } from './oauthTokenProvider/AadTokenProviderFactory';
export { default as MSGraphClient, IGraphRequest as GraphRequest } from './msGraphClient/MSGraphClient';
export { default as MSGraphClientFactory } from './msGraphClient/MSGraphClientFactory';
export { ISPOBOFlowParameters as _ISPOBOFlowParameters } from './oauthTokenProvider/OBOTokenProvider';
export { default as _AdalAuthContextManager, IAdalJsModule as _IAdalJsModule } from './oauthTokenProvider/AdalAuthContextManager';
export { MsalTokenProvider } from './oauthTokenProvider/MsalTokenProvider';
export { ITokenProvider as _ITokenProvider } from './oauthTokenProvider/ITokenProvider';
export { ICacheDataProvider as _ICacheDataProvider } from './caching/ICacheDataProvider';
export { cacheDataProviderServiceKey as _cacheDataProviderServiceKey } from './caching/CacheDataProviderService';
export { IClientCachableResponse as _IClientCachableResponse } from './caching/IClientCachableResponse';
export { CacheManager as _CacheManager } from './caching/CacheManager';
export { CacheStrategy as _CacheStrategy, IRequestCacheOptions as _IRequestCacheOptions } from './caching/IRequestCacheOptions';
//# sourceMappingURL=index.d.ts.map