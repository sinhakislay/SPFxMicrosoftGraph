import SPHttpClientResponse from './SPHttpClientResponse';
/**
 * This is a private helper class used by SPHttpClientBatch to track the state of each
 * queued REST request.
 */
export default class BatchedRequest {
    /**
     * The underlying request being tracked by this object.
     */
    request: Request;
    /**
     * The promise that will return the response.
     */
    promise: Promise<SPHttpClientResponse>;
    /**
     * The response.  This is tracked for diagnostic purposes only.
     */
    response: SPHttpClientResponse | undefined;
    private _resolveCallback;
    private _rejectCallback;
    constructor(request: Request);
    /**
     * This resolves the BatchedRequest.promise with the provided response.
     */
    resolvePromise(response: SPHttpClientResponse): void;
    /**
     * This rejects the BatchedRequest.promise with the provided error.
     */
    rejectPromiseIfNotResolved(error: Error): void;
}
//# sourceMappingURL=BatchedRequest.d.ts.map