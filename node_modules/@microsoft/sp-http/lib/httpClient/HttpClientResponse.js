/**
 * The Response subclass returned by methods such as HttpClient.fetch().
 *
 * @remarks
 * This is a placeholder.  In the future, additional HttpClient-specific functionality
 * may be added to this class.
 *
 * @privateRemarks
 * This class exposes the same members as our typings for the browser's native
 * Response and Body classes, which is why we can say that it "implements" them.
 * It cannot actually inherit from Response because that class does not have a copy
 * constructor (because it would probably be inefficient to copy the response stream).
 *
 * @public
 */
var HttpClientResponse = /** @class */ (function () {
    /**
     * @internal
     */
    function HttpClientResponse(response) {
        this.nativeResponse = response;
    }
    Object.defineProperty(HttpClientResponse.prototype, "body", {
        // Body members
        /**
         * This property is marked as alpha because it is not yet implemented by the `@microsoft/sp-polyfills` package.
         *
         * @alpha
         */
        get: function () { return this.nativeResponse.body; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "bodyUsed", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
         */
        get: function () { return this.nativeResponse.bodyUsed; },
        enumerable: true,
        configurable: true
    });
    /**
     * See documentation for the browser's
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
     */
    HttpClientResponse.prototype.arrayBuffer = function () { return this.nativeResponse.arrayBuffer(); };
    /**
     * See documentation for the browser's
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
     */
    HttpClientResponse.prototype.blob = function () { return this.nativeResponse.blob(); };
    /**
     * See documentation for the browser's
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
     */
    HttpClientResponse.prototype.formData = function () { return this.nativeResponse.formData; }; // tslint:disable-line:no-any
    /**
     * See documentation for the browser's
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
     */
    HttpClientResponse.prototype.json = function () { return this.nativeResponse.json(); };
    /**
     * See documentation for the browser's
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/Body | Body} API
     */
    HttpClientResponse.prototype.text = function () { return this.nativeResponse.text(); };
    Object.defineProperty(HttpClientResponse.prototype, "type", {
        // Response members
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.type; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "redirected", {
        /**
         * This property is marked as alpha because it is not yet implemented by the `@microsoft/sp-polyfills` package.
         *
         * @alpha
         */
        get: function () { return this.nativeResponse.redirected; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "url", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.url; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "status", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.status; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "ok", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.ok; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "statusText", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.statusText; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "trailer", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         *
         * This property is marked as alpha because it is not yet implemented by the `@microsoft/sp-polyfills` package.
         *
         * @alpha
         */
        get: function () { return this.nativeResponse.trailer; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "headers", {
        /**
         * See documentation for the browser's
         * {@link https://developer.mozilla.org/en-US/docs/Web/API/Response | Response} API
         */
        get: function () { return this.nativeResponse.headers; },
        enumerable: true,
        configurable: true
    });
    /**
     * @virtual
     */
    HttpClientResponse.prototype.clone = function () {
        return new HttpClientResponse(this.nativeResponse.clone());
    };
    return HttpClientResponse;
}());
export default HttpClientResponse;
//# sourceMappingURL=HttpClientResponse.js.map