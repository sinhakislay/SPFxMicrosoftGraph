import AadTokenProvider, { TokenAcquisitionEventArgs } from './AadTokenProvider';
import AadConstants from './AadConstants';
import { _SPEventManager } from '@microsoft/sp-core-library';
import strings from '../SPHttpStrings.resx';
var AadErrorHandler = /** @class */ (function () {
    function AadErrorHandler() {
    }
    /**
     * This function will fire an event if the AAD error code can be resolved with a full page redirect.
     */
    AadErrorHandler._handleInteractionRequiredFailuresOld = function (authContext, errorMessage, resource) {
        var urlNavigate = authContext._getNavigateUrl(authContext.RESPONSE_TYPE.TOKEN, resource) +
            '&prompt=select_account';
        _SPEventManager.instance.raiseEvent(AadTokenProvider._tokenAcquisitionEventId, new TokenAcquisitionEventArgs(strings.additionalCredentialsWarning, urlNavigate));
    };
    /**
     * This function will fire an event if the AAD error code can be resolved with a full page redirect.
     */
    AadErrorHandler._handleInteractionRequiredFailures = function (authContext, errorMessage, resource) {
        // Don't prompt for interaction if the end user cannot resolve this failure.
        if (!AadErrorHandler._doesAadErrorCodeExist(errorMessage, AadConstants.UNRESOLVABLE_AAD_ERROR_CODES)) {
            AadConstants.RESOLVABLE_ERROR_CODES.forEach(function (errorCode) {
                if (errorMessage.indexOf(errorCode) > -1) {
                    var urlNavigate = authContext._getNavigateUrl(authContext.RESPONSE_TYPE.TOKEN, resource) +
                        '&prompt=select_account';
                    _SPEventManager.instance.raiseEvent(AadTokenProvider._tokenAcquisitionEventId, new TokenAcquisitionEventArgs(strings.additionalCredentialsWarning, urlNavigate));
                }
            });
        }
    };
    /**
     * Returns true if an AAD Error Code exists in the error message.
     */
    AadErrorHandler._doesAadErrorCodeExist = function (errorMessage, setOfErrorCodes) {
        // AAD error messages use the following pattern. 'ErrorCode: ErrorMessage'. AAD errors can have multiple
        // error codes.
        var errorCodes = errorMessage.match(/(AADSTS)[0-9]+/g) || [];
        for (var _i = 0, errorCodes_1 = errorCodes; _i < errorCodes_1.length; _i++) {
            var errorCode = errorCodes_1[_i];
            if (setOfErrorCodes.has(errorCode)) {
                return true;
            }
        }
        return false;
    };
    return AadErrorHandler;
}());
export { AadErrorHandler };
//# sourceMappingURL=AadErrorHandler.js.map