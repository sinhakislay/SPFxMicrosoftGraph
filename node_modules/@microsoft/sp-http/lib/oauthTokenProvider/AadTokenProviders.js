import MockAadTokenProvider from './MockAadTokenProvider';
/**
 * AadTokenProviders is used to retrieve preinitialized instances of the AadTokenProvider class.
 * This class should only be used within the SharePoint Framework.
 * @internal
 */
var AadTokenProviders = /** @class */ (function () {
    function AadTokenProviders() {
    }
    /**
     * Initializes the AadTokenProviders. Must be called before fetching AadTokenProvider objects.
     * @internal
     */
    AadTokenProviders._initialize = function (configurable, preAuthorizedConfig) {
        AadTokenProviders._configurableTokenProvider = configurable;
        AadTokenProviders._preAuthorizedConfiguration = preAuthorizedConfig;
    };
    Object.defineProperty(AadTokenProviders, "configurable", {
        /**
         * Retrieves a preinitialized version of the `AadTokenProvider` class for communicating with the
         * current tenant's configurable Service Principal. This application can be configured
         * by granting permission scopes to the tenant's instance of the Service Principal.
         *
         * For more information, see
         * {@link https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient}
         */
        get: function () {
            return AadTokenProviders._configurableTokenProvider;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AadTokenProviders, "preAuthorizedConfiguration", {
        /**
         * Retrieves the configuration for communicating with the current tenant's Service
         * Principal. This application has a set of preauthorized scopes from Microsoft.
         */
        get: function () {
            return this._preAuthorizedConfiguration;
        },
        enumerable: true,
        configurable: true
    });
    AadTokenProviders._configurableTokenProvider = new MockAadTokenProvider();
    return AadTokenProviders;
}());
export default AadTokenProviders;
//# sourceMappingURL=AadTokenProviders.js.map