import * as AuthenticationContext from 'adal-angular';
import { IAadTokenProviderConfiguration } from './IAadTokenProvider';
import { ISPOBOFlowParameters } from './OBOTokenProvider';
import { ITokenProvider } from './ITokenProvider';
/**
 * Represents the exported module from the adal-angular npm package.
 * @internal
 */
export interface IAdalJsModule {
    inject: (configuration: AuthenticationContext.Options) => AuthenticationContext;
}
/**
 * Class for managing multiple instances of the authentication context.
 * @internal
 */
export default class AdalAuthContextManager {
    private static usePromptQueryParamKillSwitchGuid;
    private static addAdditionalTelemetryKillSwitchGuid;
    /**
     * Handles the loading of Adal.js. It is set to protected so that it can
     * be mocked in a unit test.
     * @internal
     */
    protected _loadAdalJsModulePromise: Promise<IAdalJsModule> | undefined;
    private _authContextDictionary;
    static convertTokenParametersToConfig(tokenProviderParameters: IAadTokenProviderConfiguration): AuthenticationContext.Options;
    constructor();
    getAuthContext(tokenProviderConfiguration: IAadTokenProviderConfiguration, sharePointOBOProviderConfiguration?: ISPOBOFlowParameters): Promise<ITokenProvider>;
    private _loadAdalJs;
}
//# sourceMappingURL=AdalAuthContextManager.d.ts.map